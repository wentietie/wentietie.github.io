"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["605"],{18037:function(n,s,l){l.r(s),l.d(s,{default:function(){return h}});var e=l(85893),i=l(50065);function r(n){let s=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",ul:"ul",li:"li",strong:"strong"},(0,i.ah)(),n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(s.h1,{id:"2-关系型数据库与非关系型数据库",children:[(0,e.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#2-关系型数据库与非关系型数据库",children:"#"}),"2 关系型数据库与非关系型数据库"]}),"\n",(0,e.jsxs)(s.h2,{id:"21-关系型数据库rdbms",children:[(0,e.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#21-关系型数据库rdbms",children:"#"}),"2.1 关系型数据库RDBMS"]}),"\n",(0,e.jsxs)(s.blockquote,{children:["\n",(0,e.jsx)(s.p,{children:"定义"}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"关系型数据库模型是把复杂的数据结构归结为简单的 二元关系 （即二维表格形式）。"}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsxs)(s.li,{children:["关系型数据库以 ",(0,e.jsx)(s.strong,{children:"行(row)"})," 和 ",(0,e.jsx)(s.strong,{children:"列(column)"})," 的形式存储数据，以便于用户理解。这一系列的行和列被称为 ",(0,e.jsx)(s.strong,{children:"表(table)"})," ，一组表组成了一个",(0,e.jsx)(s.strong,{children:"库(database)"}),"。"]}),"\n",(0,e.jsxs)(s.li,{children:["表与表之间的数据记录有",(0,e.jsx)(s.strong,{children:"关系(relationship)"}),"。现实世界中的各种实体以及实体之间的各种联系均用 ",(0,e.jsx)(s.strong,{children:"关系模型"})," 来表示。",(0,e.jsx)(s.strong,{children:"关系型数据库"}),"，就是建立在关系模型基础上的数据库"]}),"\n"]}),"\n",(0,e.jsxs)(s.blockquote,{children:["\n",(0,e.jsx)(s.p,{children:"优势"}),"\n"]}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"复杂查询"}),"： 可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"事务支持"}),"： 使得对于安全性能很高的数据访问要求得以实现。"]}),"\n"]}),"\n",(0,e.jsxs)(s.h2,{id:"22-非关系型数据库nosql",children:[(0,e.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#22-非关系型数据库nosql",children:"#"}),"2.2 非关系型数据库NoSQL"]}),"\n",(0,e.jsxs)(s.blockquote,{children:["\n",(0,e.jsx)(s.p,{children:"定义"}),"\n"]}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.strong,{children:"非关系型数据库"}),"，可看成传统关系型数据库的功能 ",(0,e.jsx)(s.strong,{children:"阉割版本"})," ，基于键值对存储数据，不需要经过SQL层 的解析， ",(0,e.jsx)(s.strong,{children:"性能非常高"})," 。同时，通过减少不常用的功能，进一步提高性能。"]}),"\n",(0,e.jsxs)(s.blockquote,{children:["\n",(0,e.jsx)(s.p,{children:"分类"}),"\n"]}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"键值型数据库"}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsx)(s.li,{children:"定义：键值型数据库通过 Key-Value 键值的方式来存储数据，其中 Key 和 Value 可以是简单的对象，也可以是复杂的对象。Key 作为唯一的标识符"}),"\n",(0,e.jsx)(s.li,{children:"优点：查找速度快"}),"\n",(0,e.jsx)(s.li,{children:"缺点：无法 像关系型数据库一样使用条件过滤（比如 WHERE），如果你不知道去哪里找数据，就要遍历所有的键， 这就会消耗大量的计算"}),"\n",(0,e.jsx)(s.li,{children:"使用场景：内存缓存"}),"\n",(0,e.jsx)(s.li,{children:"举例：Redis"}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"文档型数据库"}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsx)(s.li,{children:"定义：在数据库中文档作为处理信息的基本单位， 一个文档就相当于一条记录。文档数据库所存放的文档，就相当于键值数据库所存放的“值”。"}),"\n",(0,e.jsx)(s.li,{children:"使用场景：存放并获取文档，可以是XML、JSON等格式"}),"\n",(0,e.jsx)(s.li,{children:"举例：MongoDB"}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"搜索引擎数据库"}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsx)(s.li,{children:"定义：搜索引擎数据库是应用在搜索引擎领域的数据存储形式，由于搜索引擎会爬取大量的数据，并以特定的格式进行存储，这样在检 索的时候才能保证性能最优"}),"\n",(0,e.jsx)(s.li,{children:"使用场景：搜索引擎领域"}),"\n",(0,e.jsx)(s.li,{children:"举例：Solr、Elasticsearch、Splunk"}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"列式数据库"}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsx)(s.li,{children:"定义：列式数据库是将数据按照列存储到数据库中"}),"\n",(0,e.jsx)(s.li,{children:"优点：可以大量降低系统的 I/O"}),"\n",(0,e.jsx)(s.li,{children:"缺点：功能相对行式数据库有限"}),"\n",(0,e.jsx)(s.li,{children:"使用场景：分布式文件系统"}),"\n",(0,e.jsx)(s.li,{children:"举例：HBase"}),"\n"]}),"\n"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"图形数据库"}),"：","\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsx)(s.li,{children:"定义：是一种存储图形关系的数据库。它利用了图这种数据结构存储了实体（对象） 之间的关系"}),"\n",(0,e.jsx)(s.li,{children:"优点：能高效地解决复杂的关系问题"}),"\n",(0,e.jsx)(s.li,{children:"使用场景：存储复杂的实体关系，如社交网络中人与人的关系"}),"\n",(0,e.jsx)(s.li,{children:"举例：Neo4J、InfoGrid"}),"\n"]}),"\n"]}),"\n"]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.ah)(),n.components);return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(r,n)})):r(n)}let h=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["tang%2Fmysql%2F02_%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93.md"]={toc:[{id:"21-关系型数据库rdbms",text:"2.1 关系型数据库RDBMS",depth:2},{id:"22-非关系型数据库nosql",text:"2.2 非关系型数据库NoSQL",depth:2}],title:"2 关系型数据库与非关系型数据库",headingTitle:"2 关系型数据库与非关系型数据库",frontmatter:{}}}}]);