"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["3136"],{39683:function(e,r,s){s.r(r),s.d(r,{default:()=>d});var n=s("85893"),t=s("50065");let a=s.p+"static/image/k8s-connect-refused.edc69e7a.png";function c(e){let r=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",pre:"pre",code:"code",strong:"strong"},(0,t.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"6443_connect-refused",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#6443_connect-refused",children:"#"}),"6443_connect-refused"]}),"\n",(0,n.jsxs)(r.h1,{id:"错误信息",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#错误信息",children:"#"}),"错误信息"]}),"\n",(0,n.jsx)(r.p,{children:"The connection to the server 192.168.100.170:6443 was refused"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"k8s-connect-refused",src:a})}),"\n",(0,n.jsxs)(r.h1,{id:"解决步骤",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#解决步骤",children:"#"}),"解决步骤"]}),"\n",(0,n.jsxs)(r.p,{children:["参考文档：",(0,n.jsx)(r.a,{href:"https://www.jianshu.com/p/6edc9f171df1",rel:"noopener noreferrer",target:"_blank",children:"https://www.jianshu.com/p/6edc9f171df1"})]}),"\n",(0,n.jsxs)(r.h2,{id:"step1-查看6443端口是否正常或者是否开启防火墙",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#step1-查看6443端口是否正常或者是否开启防火墙",children:"#"}),"step1. 查看6443端口是否正常或者是否开启防火墙"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",meta:"",children:"netstat -pnlt | grep 6443\r\n\r\n# 如果提示 netstat： \r\nyum install net-tools\n"})}),"\n",(0,n.jsxs)(r.p,{children:["运行之后什么都没有返回，也就是说 ",(0,n.jsx)(r.strong,{children:"APIServer 完全没有提供服务"}),"，那我们就去查看一下 kubelet 的日志，大家都知道使用 kubeadm 搭建的 k8s集群里，APIServer 都是在 docker 里运行的，这里我们先找到对应的容器，记得加 ",(0,n.jsx)(r.code,{children:"-a"}),"，因为该容器可能已经处于非正常状态了。"]}),"\n",(0,n.jsxs)(r.h2,{id:"step2查看apiserver",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#step2查看apiserver",children:"#"}),"step2.查看APIServer"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",meta:"",children:'docker ps -a | grep apiserver\r\n\r\n# 输出\r\nf40d97ee2be6        40a63db91ef8                                                    "kube-apiserver --au…"   2 minutes ago        Exited (255) 2 minutes ago                            k8s_kube-apiserver_kube-apiserver-master1_kube-system_7beef975d93d634ecee05282d3d3a9ac_718\r\n4b866fe71e33        registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1   "/pause"                 2 days ago           Up 2 days                                             k8s_POD_kube-apiserver-master1_kube-system_7beef975d93d634ecee05282d3d3a9ac_0\n'})}),"\n",(0,n.jsxs)(r.p,{children:["这里能看到两个容器，可以看到 ",(0,n.jsxs)(r.strong,{children:["容器的状态已经是 ",(0,n.jsx)(r.code,{children:"Exited"})," 了"]}),"，注意下面的",(0,n.jsx)(r.code,{children:"pause"}),"容器，这个只是用来引导 APIServer 的，并不是服务的实际运行容器，所以看不到日志，所以查看日志时不要输错容器 id 了。接下来查看 APIServer 的日志。"]}),"\n",(0,n.jsxs)(r.h2,{id:"step3查看apiserver-的日志",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#step3查看apiserver-的日志",children:"#"}),"Step3.查看APIServer 的日志"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",meta:"",children:"docker logs -f f40d97ee2be6\r\n\r\n# 输出\r\nI1230 01:39:42.942786       1 server.go:557] external host was not specified, using 192.168.100.171\r\nI1230 01:39:42.942924       1 server.go:146] Version: v1.13.1\r\nI1230 01:39:43.325424       1 plugins.go:158] Loaded 8 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,Priority,DefaultTolerationSeconds,DefaultStorageClass,MutatingAdmissionWebhook.\r\nI1230 01:39:43.325451       1 plugins.go:161] Loaded 6 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,ValidatingAdmissionWebhook,ResourceQuota.\r\nI1230 01:39:43.326327       1 plugins.go:158] Loaded 8 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,Priority,DefaultTolerationSeconds,DefaultStorageClass,MutatingAdmissionWebhook.\r\nI1230 01:39:43.326340       1 plugins.go:161] Loaded 6 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,ValidatingAdmissionWebhook,ResourceQuota.\r\nF1230 01:40:03.328865       1 storage_decorator.go:57] Unable to create storage backend: config (&{ /registry [https://127.0.0.1:2379] /etc/kubernetes/pki/apiserver-etcd-client.key /etc/kubernetes/pki/apiserver-etcd-client.crt /etc/kubernetes/pki/etcd/ca.crt true 0xc0004bd440 <nil> 5m0s 1m0s}), err (dial tcp 127.0.0.1:2379: connect: connection refused)\n"})}),"\n",(0,n.jsx)(r.p,{children:"从最后一行可以看到，是 APIServer 在尝试创建存储时出现了问题，导致无法正确启动服务，由于 k8s 是使用 etcd 作为存储的，所以我们再来查看 etcd 的日志 。"}),"\n",(0,n.jsxs)(r.h2,{id:"step4查看etcd日志",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#step4查看etcd日志",children:"#"}),"Step4.查看etcd日志"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",meta:"",children:'# 查看 etcd 容器，注意 etcd 也有对应的 pause 容器\r\ndocker ps -a | grep etcd\r\n\r\n# 输出\r\n1b8b522ee4e8        3cab8e1b9802                                                    "etcd --advertise-cl…"   7 minutes ago        Exited (2) 6 minutes ago                              k8s_etcd_etcd-master1_kube-system_1051dec0649f2b816946cb1fea184325_942\r\nc9440543462e        registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1   "/pause"                 2 days ago           Up 2 days                                             k8s_POD_etcd-master1_kube-system_1051dec0649f2b816946cb1fea184325_0\r\n\r\n\r\n# 查看 etcd 日志\r\ndocker logs -f 1b8b522ee4e8\r\n\r\n# 输出\r\n...\r\n2021-03-24 03:10:27.339748 I | embed: initial advertise peer URLs = https://10.1.93.160:2380\r\n2021-03-24 03:10:27.339752 I | embed: initial cluster =\r\n2021-03-24 03:10:27.339927 W | pkg/fileutil: check file permission: directory "/var/lib/etcd/member/snap" exist, but the permission is "drwxr-xr-x". The recommendedo the data.\r\n2021-03-24 03:10:27.950522 I | etcdserver: recovered store from snapshot at index 11841307\r\n2021-03-24 03:10:27.951270 I | mvcc: restore compact to 11013220\r\n2021-03-24 03:10:27.958062 E | wal: failed to allocate space when creating new wal file (no space left on device)\r\n2021-03-24 03:10:28.111238 C | etcdserver: read wal error (no space left on device) and cannot be repaired\n'})}),"\n",(0,n.jsxs)(r.p,{children:["从最后一行可以看出，",(0,n.jsx)(r.code,{children:"no space left on device"}),"，表示磁盘空间不够了。解决方法，要么是删掉虚拟机中无用文件，要么是给虚拟机增加内存。"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,t.ah)(),e.components);return r?(0,n.jsx)(r,Object.assign({},e,{children:(0,n.jsx)(c,e)})):c(e)}let d=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["tang%2Fk8s%2F%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6%2F6443_connect-refused.md"]={toc:[{id:"step1-查看6443端口是否正常或者是否开启防火墙",text:"step1. 查看6443端口是否正常或者是否开启防火墙",depth:2},{id:"step2查看apiserver",text:"step2.查看APIServer",depth:2},{id:"step3查看apiserver-的日志",text:"Step3.查看APIServer 的日志",depth:2},{id:"step4查看etcd日志",text:"Step4.查看etcd日志",depth:2}],title:"6443_connect-refused",headingTitle:"6443_connect-refused",frontmatter:{}}}}]);