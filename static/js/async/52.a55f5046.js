"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["52"],{5316:function(n,e,r){r.r(e),r.d(e,{default:function(){return i}});var s=r(85893),d=r(50065);function c(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",ul:"ul",li:"li",strong:"strong",h3:"h3",pre:"pre",code:"code",p:"p",blockquote:"blockquote",em:"em"},(0,d.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"14-视图",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#14-视图",children:"#"}),"14 视图"]}),"\n",(0,s.jsxs)(e.h2,{id:"141-常见的数据库对象",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#141-常见的数据库对象",children:"#"}),"14.1 常见的数据库对象"]}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"对象"}),(0,s.jsx)(e.th,{children:"描述"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"表（TABLE）"}),(0,s.jsx)(e.td,{children:"表是存储数据的逻辑单元，以行和列的形式存在。列就是字段，行就是记录"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"数据字典"}),(0,s.jsx)(e.td,{children:"就是系统表，存放数据库相关信息的表。系统表的数据通常由数据库系统维护，程序员一般不可修改，只能查看"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"约束（CONSTRAINT）"}),(0,s.jsx)(e.td,{children:"执行数据校验的规则，用于保证数据的完整性"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"视图（VIEW）"}),(0,s.jsx)(e.td,{children:"一个或者多个数据表里的数据的逻辑显示，视图本身并不存储数据"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"索引（INDEX）"}),(0,s.jsx)(e.td,{children:"用于提高查询性能，相当于书的目录"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"存储过程（PROCEDURE）"}),(0,s.jsx)(e.td,{children:"用于完成一次完整的业务处理，没有返回值。但可以通过传出参数将多个值传给调用环境"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"存储函数（FUNCTION）"}),(0,s.jsx)(e.td,{children:"用于完成一次特定的计算，具有一个返回值"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"触发器（TRIGGER）"}),(0,s.jsx)(e.td,{children:"相当于一个事件监听器，当数据库发生特定事件后，触发器被触发，完成相应的处理"})]})]})]}),"\n",(0,s.jsxs)(e.h2,{id:"142-视图概述",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#142-视图概述",children:"#"}),"14.2 视图概述"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["视图是一个",(0,s.jsx)(e.strong,{children:"虚拟表"}),"，本身",(0,s.jsx)(e.strong,{children:"不存储数据"}),"，占用很少的内存空间"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"视图建立在已有表的基础上"}),"，视图赖以建立的表被称为",(0,s.jsx)(e.strong,{children:"基表"})]}),"\n",(0,s.jsx)(e.li,{children:"视图的创建和删除只影响视图本身，不影响对应的基表"}),"\n",(0,s.jsx)(e.li,{children:"针对视图中的数据做DML操作，会影响到对应的基表中的数据。反之亦然"}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"视图的应用场景"}),"：针对于小型项目，不推荐使用视图。针对于大型项目，可以考虑使用视图"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"视图的优点"}),"：简化查询; 控制数据的访问"]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"143-创建视图",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#143-创建视图",children:"#"}),"14.3 创建视图"]}),"\n",(0,s.jsxs)(e.h3,{id:"1431-完整语法",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1431-完整语法",children:"#"}),"14.3.1 完整语法"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE [OR REPLACE]\r\n[ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\r\nVIEW 视图名称 [(字段列表)]\r\nAS \r\n查询语句\r\n[WITH [CASCADED|LOCAL] CHECK OPTION]\n"})}),"\n","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"OR REPLACE"}),"：表示",(0,s.jsx)(e.strong,{children:"如果没有就创建，如果有就修改"})]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"ALGORITHM"}),"（了解）：它表示",(0,s.jsx)(e.strong,{children:"使用何种算法来处理视图"}),"。是MySQL对标准SQL进行的功能扩展。"]}),"\n",(0,s.jsx)(e.p,{children:"ALGORITHM有如下3个值可选："}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"MERGE"}),"：会将引用视图的语句的文本与视图定义合并起来，使得视图定义的部分替换语句的相应部分"]}),"\n",(0,s.jsx)(e.p,{children:"例子如下："}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"① 创建视图"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE ALGORITHM = MERGE VIEW v_merge (vc1, vc2) \r\nAS\r\nSELECT c1, c2 FROM t WHERE c3 > 100;\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"② 使用视图进行查询"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"SELECT * FROM v_merge WHERE vc1 < 100;\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"③ 最终执行的语句实际为："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"SELECT c1, c2 FROM t WHERE (c3 > 100) AND (c1 < 100);\r\n# 注意：where中的条件是由(select WHERE)和（view WHERE）组合起来的，重点注意二者分别用()包裹着，并且使用AND连接\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"TEMPTABLE"}),"，视图的结果将被置于临时表中，然后使用它执行语句"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"UNDEFINED"}),"，MySQL选择使用哪种算法。如果可能，它倾向于",(0,s.jsx)(e.code,{children:"MERGE"}),"而不是",(0,s.jsx)(e.code,{children:"TEMPTABLE"}),"，这是因为",(0,s.jsx)(e.code,{children:"MERGE"}),"通常更有效，而且如果使用了临时表，视图是不可更新的。"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["如果没有ALGORITHM子句，默认算法由系统变量",(0,s.jsx)(e.code,{children:"optimizer_switch"}),"的",(0,s.jsx)(e.code,{children:"derived_merge"}),"标志的值确定。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"查询语句"}),"：既可以在表的基础上创建视图，也可以在视图的基础上创建视图"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"WITH [CASCADED|LOCAL] CHECK OPTION"}),"：",(0,s.jsx)(e.strong,{children:"确保视图数据的一致性"}),"。即当通过视图更新或插入基表的一行记录时，MySQL都会确保插入或更新操作符合视图的定义（即确保该记录符合创建视图时SELECT字句中的WHERE条件）"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"CASCADED"}),"：",(0,s.jsx)(e.strong,{children:"默认值"}),"。表示MySQL会以",(0,s.jsx)(e.strong,{children:"递归"}),"方式检查视图的规则以及基础视图的规则（）"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"LOCAL"}),"：",(0,s.jsx)(e.strong,{children:"在MySQL 5.7.6之前"}),"，仅检查当前视图的规则，而不检查基础视图的规则；",(0,s.jsx)(e.strong,{children:"在MySQL 5.7.6之后"}),"，将检查带有",(0,s.jsx)(e.code,{children:"WITH LOCAL CHECK OPTION"}),"和",(0,s.jsx)(e.code,{children:"WITH CASCADED CHECK OPTION"}),"选项的视图规则（只检查带有这两个选项的视图规则）。"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"例子："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 1.建表\r\nDROP TABLE IF EXISTS t1;\r\n\r\nCREATE TABLE t1 (\r\n    c INT\r\n);\r\n\r\n# 2.基于t1表创建一个名为v1的视图，以选择值大于10的行。\r\nCREATE OR REPLACE VIEW v1 \r\nAS\r\n    SELECT \r\n        c\r\n    FROM\r\n        t1\r\n    WHERE\r\n        c > 10; \r\n				\r\n# 3. 插入成功\r\nINSERT INTO v1(c) VALUES (5); \r\n\r\n# 4.基于v1视图创建v2视图。这次，我们添加一个WITH CASCADED CHECK OPTION条款。\r\nCREATE OR REPLACE VIEW v2 \r\nAS\r\n    SELECT \r\n        c\r\n    FROM\r\n        v1 \r\nWITH CASCADED CHECK OPTION; \r\n\r\n# 5.插入失败：CHECK OPTION failed 'dbtest14.v2' ----\x3e 因为它创建了一个不符合v2视图定义的新行。\r\nINSERT INTO v2(c) VALUES (5); \r\n\r\n# 6.基于v2创建一个名为v3的新视图\r\nCREATE OR REPLACE VIEW v3 \r\nAS\r\n    SELECT \r\n        c\r\n    FROM\r\n        v2\r\n    WHERE\r\n        c < 20; \r\n\r\n# 7.插入失败：CHECK OPTION failed 'dbtest14.v3' ----\x3e 因为v3视图依赖于v2视图，而v2视图具有WITH CASCADED CHECK OPTION。\r\nINSERT INTO v3(c) VALUES (8); \r\n# 插入成功：因为：\r\n# 							①v3视图定义时没有WITH CHECK OPTION选项，所以不会匹配33是否符合v3视图的定义；\r\n#								②v2视图定义时有WITH CASCADED CHECK OPTION选项，此时需要匹配33是否符合v2视图的定义，刚好33符合\r\n#						综上，33插入成功\r\nINSERT INTO v3(c) VALUES (33); \r\n\r\n\r\n# 8.我们更改v2视图以使用WITH LOCAL CHECK OPTION替代。\r\nALTER VIEW v2 AS\r\n    SELECT \r\n        c\r\n    FROM\r\n        v1 \r\nWITH CASCADED CHECK OPTION; \r\n\r\n# 9.插入与步骤5相同的记录，插入成功。\r\n# 	插入成功原因：因为v2视图没有任何规则。v2视图取决于v1视图。但是，v1视图未指定检查选项，因此MySQL会跳过检查v1视图中的规则。\r\nINSERT INTO v2(c) VALUES (5); \r\n\r\n# 10. 插入与步骤5相同的记录，插入成功。\r\nINSERT INTO v3(c) VALUES (8); \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"1432-精简版语法",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1432-精简版语法",children:"#"}),"14.3.2 精简版语法"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE VIEW 视图名\r\nAS \r\n查询语句\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"查询语句"}),"：既可以在表的基础上创建视图，也可以在视图的基础上创建视图"]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"144-查看视图信息",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#144-查看视图信息",children:"#"}),"14.4 查看视图信息"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"查看数据库的表对象、视图对象"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"SHOW TABLES;\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"看视图的结构"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"DESC 视图名;\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"查看视图的属性信息（显示数据表的存储引擎、版本、数据行数和数据大小等）"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"SHOW TABLE STATUS LIKE '视图名';\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"查看视图的详细定义信息"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"SHOW CREATE VIEW 视图名;\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"145-更新视图中的数据",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#145-更新视图中的数据",children:"#"}),"14.5 更新视图中的数据"]}),"\n",(0,s.jsxs)(e.p,{children:["一般情况下，MySQL支持使用",(0,s.jsx)(e.code,{children:"INSERT"}),"、",(0,s.jsx)(e.code,{children:"UPDATE"}),"和",(0,s.jsx)(e.code,{children:"DELETE"}),"语句对视图中的数据进行插入、更新和删除操作。当视图中的数据发生变化时，数据表中的数据也会发生变化，反之亦然。"]}),"\n",(0,s.jsxs)(e.p,{children:["但是，",(0,s.jsx)(e.strong,{children:"在如下情况下，视图中的数据是不允许更新的"}),"："]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["在定义视图时，指定了",(0,s.jsx)(e.code,{children:"ALGORITHM = TEMPTABLE"}),"，该视图不支持",(0,s.jsx)(e.em,{children:"INSERT"}),"和 ",(0,s.jsx)(e.em,{children:"DELETE"}),"操作"]}),"\n",(0,s.jsxs)(e.li,{children:["在定义视图时，指定了",(0,s.jsx)(e.code,{children:"WITH [CASCADED|LOCAL] CHECK OPTION"}),"，且INSERT和UPDATE的记录不满足视图规则时，不能更新"]}),"\n",(0,s.jsxs)(e.li,{children:["视图中",(0,s.jsx)(e.strong,{children:"不包含基表中所有被定义为NOT NULL且又未指定默认值的列"}),"，该视图不支持",(0,s.jsx)(e.em,{children:"INSERT"}),"操作"]}),"\n",(0,s.jsxs)(e.li,{children:["在定义视图的SELECT中使用了",(0,s.jsx)(e.code,{children:"JOIN联合查询"}),"，该视图不支持 ",(0,s.jsx)(e.em,{children:"INSERT"}),"和 ",(0,s.jsx)(e.em,{children:"DELETE"}),"操作"]}),"\n",(0,s.jsxs)(e.li,{children:["在定义视图的SELECT语句后的",(0,s.jsx)(e.strong,{children:"字段列表"}),"中使用了",(0,s.jsx)(e.code,{children:"数学表达式"}),"或",(0,s.jsx)(e.code,{children:"子查询"}),"，该视图不支持",(0,s.jsx)(e.em,{children:"INSERT"}),"操作，也不支持对使用了数学表达式和子查询的字段使用",(0,s.jsx)(e.code,{children:"UPDATE"}),"操作"]}),"\n",(0,s.jsxs)(e.li,{children:["在定义视图的SELECT语句后的",(0,s.jsx)(e.strong,{children:"字段列表"}),"中使用了",(0,s.jsx)(e.code,{children:"DISTINCT"}),"、",(0,s.jsx)(e.code,{children:"聚合函数"}),"、",(0,s.jsx)(e.code,{children:"GROUP BY"}),"、",(0,s.jsx)(e.code,{children:"HAVING"}),"、",(0,s.jsx)(e.code,{children:"UNION"}),"等"]}),"\n",(0,s.jsxs)(e.li,{children:["视图定义基于一个",(0,s.jsx)(e.code,{children:"不可更新视图"})]}),"\n",(0,s.jsx)(e.li,{children:"常量视图"}),"\n"]}),"\n","\n",(0,s.jsxs)(e.h2,{id:"146-修改视图",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#146-修改视图",children:"#"}),"14.6 修改视图"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"使用CREATE OR REPLACE VIEW子句修改视图"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE OR REPLACE VIEW 视图名\r\nAS\r\n查询语句\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"使用ALTER VIEW子句修改视图"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER VIEW 视图名\r\nAS\r\n查询语句\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"147-删除视图",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#147-删除视图",children:"#"}),"14.7 删除视图"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mysql",meta:"",children:"DROP VIEW IF EXISTS 视图名称[, 视图名称2, 视图名称3, ...];\n"})}),"\n","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"删除的是视图本身，而不会删除基表中的数据"}),"\n",(0,s.jsxs)(e.li,{children:["假设视图c是基于视图a创建的，如果删除了视图a，会导致视图c查询失败，此时",(0,s.jsx)(e.strong,{children:"需要手动删除视图c"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"148-视图的优缺点",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#148-视图的优缺点",children:"#"}),"14.8 视图的优缺点"]}),"\n",(0,s.jsxs)(e.h3,{id:"1481-视图的优点",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1481-视图的优点",children:"#"}),"14.8.1 视图的优点"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"操作简单"})}),"\n",(0,s.jsx)(e.p,{children:"将常用的查询操作定义为视图，可以使开发人员不需要关心视图对应的数据表结构、表与表之间的关联关系，只需要简单的操作视图即可，极大的简化了开发人员对数据库的操作"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"减少数据冗余"})}),"\n",(0,s.jsx)(e.p,{children:"视图本身就是一条被保存起来的SELECT语句，本身不存储数据，从而减少了数据冗余"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"数据安全"})}),"\n",(0,s.jsx)(e.p,{children:"用户不需要查询数据表，可以通过视图获取表中的数据。此外还可以限制用户对视图的操作权限，以保证数据的安全"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"适应灵活多变的需求"})}),"\n",(0,s.jsx)(e.p,{children:"当业务系统的需求发生变化后，如果需要改动表的结构，此时工作量比较大。如果借助视图，则能减少改动的工作量"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"能够分解复杂的查询逻辑"})}),"\n",(0,s.jsx)(e.p,{children:"数据库中如果存在复杂的逻辑查询，则可以将问题分解，创建多个视图获取数据，在将创建的多个视图结合起来，完成复杂的逻辑查询"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"1482-视图的缺点",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1482-视图的缺点",children:"#"}),"14.8.2 视图的缺点"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"维护比较困难，可读性不好"})}),"\n",(0,s.jsx)(e.p,{children:"如果在实际数据表的基础上创建了视图，一旦基表的结构变更，必须及时对相关视图进行维护，特别是嵌套的视图，维护变得比较复杂，可读性不好，容易变成系统的潜在隐患。且创建视图的SQL查询可能会对字段重命名，也可能是包含复杂的逻辑，这些都会增加维护的成本。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"1483-视图的使用场景",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1483-视图的使用场景",children:"#"}),"14.8.3 视图的使用场景"]}),"\n",(0,s.jsx)(e.p,{children:"针对于小型项目，不推荐使用视图。针对于大型项目，可以考虑使用视图"})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,d.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(c,n)})):c(n)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["tang%2Fmysql%2F14_%E8%A7%86%E5%9B%BE.md"]={toc:[{id:"141-常见的数据库对象",text:"14.1 常见的数据库对象",depth:2},{id:"142-视图概述",text:"14.2 视图概述",depth:2},{id:"143-创建视图",text:"14.3 创建视图",depth:2},{id:"1431-完整语法",text:"14.3.1 完整语法",depth:3},{id:"1432-精简版语法",text:"14.3.2 精简版语法",depth:3},{id:"144-查看视图信息",text:"14.4 查看视图信息",depth:2},{id:"145-更新视图中的数据",text:"14.5 更新视图中的数据",depth:2},{id:"146-修改视图",text:"14.6 修改视图",depth:2},{id:"147-删除视图",text:"14.7 删除视图",depth:2},{id:"148-视图的优缺点",text:"14.8 视图的优缺点",depth:2},{id:"1481-视图的优点",text:"14.8.1 视图的优点",depth:3},{id:"1482-视图的缺点",text:"14.8.2 视图的缺点",depth:3},{id:"1483-视图的使用场景",text:"14.8.3 视图的使用场景",depth:3}],title:"14 视图",headingTitle:"14 视图",frontmatter:{}}}}]);