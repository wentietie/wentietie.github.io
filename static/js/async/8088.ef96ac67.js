"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["8088"],{55345:function(e,r,n){n.r(r),n.d(r,{default:function(){return t}});var i=n(85893),l=n(50065);function d(e){let r=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",div:"div",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",img:"img"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h1,{id:"应用程序包概述",children:[(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#应用程序包概述",children:"#"}),"应用程序包概述"]}),"\n",(0,i.jsxs)(r.p,{children:["在基于",(0,i.jsx)(r.a,{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/application-configuration-file-overview-stage-V5",rel:"noopener noreferrer",target:"_blank",children:"Stage模型"}),"开发应用之前，开发者需要了解应用的设计机制、应用程序包结构等基础知识。"]}),"\n",(0,i.jsxs)(r.h2,{id:"应用与应用程序包",children:[(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#应用与应用程序包",children:"#"}),"应用与应用程序包"]}),"\n",(0,i.jsx)(r.p,{children:"用户应用程序泛指运行在设备的操作系统之上，为用户提供特定服务的程序，简称“应用”。一个应用所对应的软件包文件，称为“应用程序包”。"}),"\n",(0,i.jsx)(r.p,{children:"当前系统提供了应用程序包开发、安装、查询、更新、卸载的管理机制，便于开发者开发和管理应用。同时，系统还屏蔽了不同的芯片平台的差异（包括x86/ARM，32位/64位等），应用程序包在不同的芯片平台都能够安装运行，这使得开发者可以聚焦于应用的功能实现。"}),"\n",(0,i.jsxs)(r.h2,{id:"应用的多module设计机制",children:[(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#应用的多module设计机制",children:"#"}),"应用的多Module设计机制"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"支持模块化开发："})," 一个应用通常会包含多种功能，将不同的功能特性按模块来划分和管理是一种良好的设计方式。在开发过程中，我们可以将每个功能模块作为一个独立的Module进行开发，Module中可以包含源代码、资源文件、第三方库、配置文件等，每一个Module可以独立编译，实现特定的功能。这种模块化、松耦合的应用管理方式有助于应用的开发、维护与扩展。"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"支持多设备适配："})," 一个应用往往需要适配多种设备类型，在采用多Module设计的应用中，每个Module都会标注所支持的设备类型。有些Module支持全部类型的设备，有些Module只支持某一种或几种类型的设备（比如平板），那么在应用市场分发应用包时，也能够根据设备类型做精准的筛选和匹配，从而将不同的包合理的组合和部署到对应的设备上。"]}),"\n"]}),"\n",(0,i.jsxs)(r.h2,{id:"module类型",children:[(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#module类型",children:"#"}),"Module类型"]}),"\n",(0,i.jsx)(r.p,{children:"Module按照使用场景可以分为两种类型："}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Ability类型的Module："})," 用于实现应用的功能和特性。每一个Ability类型的Module编译后，会生成一个以.hap为后缀的文件，我们称其为HAP（Harmony Ability Package）包。HAP包可以独立安装和运行，是应用安装的基本单位，一个应用中可以包含一个或多个HAP包，具体包含如下两种类型。"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"entry类型的Module：应用的主模块，包含应用的入口界面、入口图标和主功能特性，编译后生成entry类型的HAP。每一个应用分发到同一类型的设备上的应用程序包，只能包含唯一一个entry类型的HAP。"}),"\n",(0,i.jsx)(r.li,{children:"feature类型的Module：应用的动态特性模块，编译后生成feature类型的HAP。一个应用中可以包含一个或多个feature类型的HAP，也可以不包含。"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Library类型的Module："})," 用于实现代码和资源的共享。同一个Library类型的Module可以被其他的Module多次引用，合理地使用该类型的Module，能够降低开发和维护成本。Library类型的Module分为Static和Shared两种类型，编译后会生成共享包。"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Static Library：静态共享库。编译后会生成一个以.har为后缀的文件，即静态共享包HAR（Harmony Archive）。"}),"\n",(0,i.jsx)(r.li,{children:"Shared Library：动态共享库。编译后会生成一个以.hsp为后缀的文件，即动态共享包HSP（Harmony Shared Package）。"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.div,{className:"rspress-directive info",children:[(0,i.jsx)(r.div,{className:"rspress-directive-title",children:"说明"}),(0,i.jsx)(r.div,{className:"rspress-directive-content",children:(0,i.jsx)(r.p,{children:"\n实际上，Shared Library编译后除了会生成一个.hsp文件，还会生成一个.har文件。这个.har文件中包含了HSP对外导出的接口，应用中的其他模块需要通过.har文件来引用HSP的功能。为了表述方便，我们通常认为Shared Library编译后生成HSP。"})})]}),"\n",(0,i.jsx)(r.p,{children:"HAR与HSP两种共享包的主要区别体现在："}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{align:"left",children:"共享包类型"}),(0,i.jsx)(r.th,{align:"left",children:"编译和运行方式"}),(0,i.jsx)(r.th,{align:"left",children:"发布和引用方式"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{align:"left",children:"HAR"}),(0,i.jsxs)(r.td,{align:"left",children:["HAR中的代码和资源跟随使用方编译，如果有多个使用方，它们的编译产物中会存在多份相同拷贝。注意：",(0,i.jsx)(r.a,{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/har-package-V5#%E7%BC%96%E8%AF%91",rel:"noopener noreferrer",target:"_blank",children:"编译HAR"}),"时，建议开启混淆能力，保护代码资产。"]}),(0,i.jsx)(r.td,{align:"left",children:"HAR除了支持应用内引用，还可以独立打包发布，供其他应用引用。"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{align:"left",children:"HSP"}),(0,i.jsx)(r.td,{align:"left",children:"HSP中的代码和资源可以独立编译，运行时在一个进程中代码也只会存在一份。"}),(0,i.jsxs)(r.td,{align:"left",children:["HSP一般随应用进行打包，当前支持应用内和",(0,i.jsx)(r.a,{href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/integrated-hsp-V5",rel:"noopener noreferrer",target:"_blank",children:"集成态HSP"}),"。应用内HSP只支持应用内引用，集成态HSP支持发布到ohpm私仓和跨应用引用。"]})]})]})]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"图1"})," HAR和HSP在APP包中的形态示意图"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20250127121540.07324088461903312021674013757186:50001231000000:2800:3C1804D3AE68F7746419F998B7BE26470691783B611C7258ED86AD423083AA03.png?needInitFileName=true?needInitFileName=true",alt:"img"})})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,l.ah)(),e.components);return r?(0,i.jsx)(r,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)}let t=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["harmony%2Fkaifajichu%2Fpart7.md"]={toc:[{id:"应用与应用程序包",text:"应用与应用程序包",depth:2},{id:"应用的多module设计机制",text:"应用的多Module设计机制",depth:2},{id:"module类型",text:"Module类型",depth:2}],title:"应用程序包概述",headingTitle:"应用程序包概述",frontmatter:{}}}}]);