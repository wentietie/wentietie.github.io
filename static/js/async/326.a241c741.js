"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["326"],{91732:function(h,e,t){t.r(e),t.d(e,{default:function(){return i}});var s=t(85893),r=t(50065);function n(h){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),h.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"路由",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#路由",children:"#"}),"路由"]}),"\n",(0,s.jsx)(e.p,{children:"URL到函数的映射。路由的映射函数通常是进行一些DOM的显示隐藏操作。当访问不同路径时，就会显示不同的页面组件。"}),"\n",(0,s.jsx)(e.p,{children:"优点：访问不同页面时，仅仅只是变换了路径而已，没有网络延迟，提升了用户体验。"}),"\n",(0,s.jsx)(e.p,{children:"缺点：使用浏览器的前进后退时，会重新发送请求，没有合理的利用缓存，不利于SEO。"}),"\n",(0,s.jsxs)(e.h2,{id:"前端路由两种主要实现方案",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#前端路由两种主要实现方案",children:"#"}),"前端路由两种主要实现方案"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"hash：hash实现就是基于location.hash来实现的，早期前端路由都是用hash。location.hash的值就是URL中#后面的内容。"}),"\n",(0,s.jsx)(e.li,{children:"history API：更美观的实现URL的变化，由H5提供的history API。最主要的API：history.pushState()、history.replaceState()。这两个API可以在不刷新的情况下，操作浏览器的历史记录。区别：pushState()是会增加新的历史记录，而replaceState()是替换当前的历史记录。都接受三个参数（state，title，URL）。"}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"hash和history的区别",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#hash和history的区别",children:"#"}),"hash和history的区别"]}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"hash"}),(0,s.jsx)(e.th,{children:"history"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"兼容更好"}),(0,s.jsx)(e.td,{children:"更正式美观"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"只修改#后面内容"}),(0,s.jsx)(e.td,{children:"可以设置同源下任意URL"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"新值不能与旧值相同，一样的不会触发动作将记录添加到栈中"}),(0,s.jsx)(e.td,{children:"新旧值可以相同，pushSate该添加的会添加到栈中"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"对服务器无需改动"}),(0,s.jsx)(e.td,{children:"刷新时，若服务器没有响应数据或资源，会404。需要对服务器做一些改造，对不同的路由进行相应的设置。"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"更改时不会发送请求"}),(0,s.jsx)(e.td,{children:"会向服务器发送请求，避免404服务器应该做处理。当匹配不到资源时，应返回同一个html页面"})]})]})]})]})}function d(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),h.components);return e?(0,s.jsx)(e,Object.assign({},h,{children:(0,s.jsx)(n,h)})):n(h)}let i=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["notes%2Fbrowser%2Froute.md"]={toc:[{id:"前端路由两种主要实现方案",text:"前端路由两种主要实现方案",depth:2},{id:"hash和history的区别",text:"hash和history的区别",depth:2}],title:"路由",headingTitle:"路由",frontmatter:{}}}}]);