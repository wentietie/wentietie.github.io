"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["3268"],{37177:function(n,e,s){s.r(e),s.d(e,{default:function(){return c}});var r=s(85893),l=s(50065);function d(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",h3:"h3",pre:"pre",code:"code",ul:"ul",li:"li",strong:"strong",p:"p",blockquote:"blockquote"},(0,l.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"10-数据库和数据库表的管理",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#10-数据库和数据库表的管理",children:"#"}),"10 数据库和数据库表的管理"]}),"\n",(0,r.jsxs)(e.h2,{id:"101-创建和管理数据库",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#101-创建和管理数据库",children:"#"}),"10.1 创建和管理数据库"]}),"\n",(0,r.jsxs)(e.h3,{id:"1011-创建数据库",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1011-创建数据库",children:"#"}),"10.1.1 创建数据库"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE DATABASE IF NOT EXISTS 数据库名 CHARACTER SET 'utf8mb4';\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"IF NOT EXISTS"}),"，表示如果要创建的数据库不存在，才会创建成功。如果存在，不会创建，也不会报错。"]}),"\n",(0,r.jsx)(e.li,{children:"如果不指明字符编码集CHARACTER，会使用数据库管理系统默认字符编码集"}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1012-修改数据库",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1012-修改数据库",children:"#"}),"10.1.2 修改数据库"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"企业开发中一般不会修改。改的话，也是只能改字符集，数据库名无法修改。"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 更改数据库字符集\r\nALTER DATABASE 数据库名 CHARACTER SET 'gbk';\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"1013-删除数据库",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1013-删除数据库",children:"#"}),"10.1.3 删除数据库"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 删除数据库（IF EXISTS：如果要删除的数据库存在，则删除成功。如果不存在，也不会报错）\r\nDROP DATABASE IF EXISTS 数据库名;\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"1014-数据库其他操作",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1014-数据库其他操作",children:"#"}),"10.1.4 数据库其他操作"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 查看当前连接中的所有数据库\r\nSHOW DATABASES;\r\n\r\n# 查看创建数据库的语句的结构\r\nSHOW CREATE DATABASE 数据库名;\r\n\r\n# 切换数据库\r\nUSE 数据库名;\r\n\r\n# 查看当前数据库中所有的表\r\nSHOW TABLES;\r\n\r\n# 查看指定数据库中所有的表\r\nSHOW TABLES FROM 数据库名;\r\n\r\n# 查看当前使用的数据库\r\nSELECT DATABASE();\n"})}),"\n",(0,r.jsxs)(e.h2,{id:"102-创建和管理数据库表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#102-创建和管理数据库表",children:"#"}),"10.2 创建和管理数据库表"]}),"\n",(0,r.jsxs)(e.h3,{id:"1021-创建表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1021-创建表",children:"#"}),"10.2.1 创建表"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"方式1：“白手起家”式"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE TABLE [IF NOT EXISTS] 表名(\r\n	字段1, 数据类型 [约束条件] [默认值],\r\n    字段2, 数据类型 [约束条件] [默认值],\r\n    字段3, 数据类型 [约束条件] [默认值],\r\n    ……\r\n    [表约束条件]\r\n);\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"IF NOT EXISTS"}),"，表示如果要创建的表不存在，才会创建成功。如果存在，不会创建，也不会报错。"]}),"\n",(0,r.jsx)(e.li,{children:"如果不指明字符编码集CHARACTER，会使用当前数据库默认的字符编码集"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"方式2：基于已有的表创建"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"CREATE TABLE 表名\r\nAS \r\nSELECT 列名1, 列名2, 列名3, ...\r\nFROM 已存在的表名\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["这种方式是基于已有的表创建，或者是基于已有的表经过一系列的查询出来的数据来创建。",(0,r.jsx)(e.strong,{children:"AS"}),"后边加上一个SELECT查询语句即可。查询语句中的列名或者列的别名就作为新表的列名。"]}),"\n",(0,r.jsx)(e.li,{children:"这种方式在创建表时，还会在新表中导入符合条件的数据。"}),"\n",(0,r.jsx)(e.li,{children:"除了非空约束，其他约束不能被赋值过来"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1022-修改表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1022-修改表",children:"#"}),"10.2.2 修改表"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"修改表指的是修改数据库中已经存在的数据表的结构"}),"，分为如下4中情况："]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"添加新的列"}),"\n",(0,r.jsx)(e.li,{children:"修改已有的列"}),"\n",(0,r.jsx)(e.li,{children:"删除已有的列"}),"\n",(0,r.jsx)(e.li,{children:"重命名已有的列"}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["实现以上功能的关键字，",(0,r.jsx)(e.strong,{children:"ALTER TABLE"}),"。"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"添加新的列"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER TABLE 表名 ADD 字段名 字段类型 [约束条件] [字段位置： FIRST 或 AFTER 字段名];\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["关键字：",(0,r.jsx)(e.strong,{children:"ALTER TABLE"})," 和 ",(0,r.jsx)(e.strong,{children:"ADD"})]}),"\n",(0,r.jsx)(e.li,{children:"约束条件是可选的，用来对添加的字段进行约束。"}),"\n",(0,r.jsxs)(e.li,{children:["字段位置，也是可选的。不同的值代表的意义如下：","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"不写"}),"：表示在表的末尾追加新的列"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"FIRST"}),"：在表的开头添加新的列"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"AFTER 字段名"}),"：在“字段名”",(0,r.jsx)(e.strong,{children:"之后"}),"插入新的列"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"修改已有的列"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"修改列指的是修改列的字段类型、默认值、在表中的位置。"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER TABLE 表名 MODIFY 字段名1 字段类型 [DEFAULT 默认值][FIRST|AFTER 字段名2]\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["关键字：",(0,r.jsx)(e.strong,{children:"ALTER TABLE"})," 和 ",(0,r.jsx)(e.strong,{children:"MODIFY"})]}),"\n",(0,r.jsx)(e.li,{children:"默认值是可选的。"}),"\n",(0,r.jsxs)(e.li,{children:["字段位置，也是可选的。不同的值代表的意义如下：","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"不写"}),"：表示还在原来位置不变"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"FIRST"}),"：表示将该列移到表的开头"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"AFTER 字段名"}),"：表示将该列移动到“字段名2”",(0,r.jsx)(e.strong,{children:"之后"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"重命名已有的列"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER TABLE 表名 CHANGE 列名 新列名 新数据类型;\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["关键字：",(0,r.jsx)(e.strong,{children:"ALTER TABLE"})," 和 ",(0,r.jsx)(e.strong,{children:"CHANGE"})]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"删除已有的列"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER TABLE 表名 DROP 列名\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["关键字：",(0,r.jsx)(e.strong,{children:"ALTER TABLE"})," 和 ",(0,r.jsx)(e.strong,{children:"DROP"})]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1023-重命名表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1023-重命名表",children:"#"}),"10.2.3 重命名表"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["方式1：",(0,r.jsx)(e.strong,{children:"RENAME"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"RENAME TABLE 表名 TO 新表名\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["方式2：",(0,r.jsx)(e.strong,{children:"ALTER"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"ALTER TABLE 表名 RENAME [TO] 新表名\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1024-删除表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1024-删除表",children:"#"}),"10.2.4 删除表"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"说明"}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["当一张表",(0,r.jsx)(e.strong,{children:"没有与其他任何数据表形成关联关系"}),"时，才可删除"]}),"\n",(0,r.jsx)(e.li,{children:"删除表时，所有正在运行的相关事务被提交"}),"\n",(0,r.jsx)(e.li,{children:"删除表时，所有相关索引被删除"}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"语法"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"DROP TABLE [IF EXISTS] 数据表1 [, 数据表2, …, 数据表n];\n"})}),"\n","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"DROP TABLE 语句不能回滚！！！"})," 删表前，做好备份工作。"]}),"\n",(0,r.jsx)(e.li,{children:"DROP之后，删除表数据、表结构，释放表空间"}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1025-清空表",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1025-清空表",children:"#"}),"10.2.5 清空表"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"语法"}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["方式1：使用",(0,r.jsx)(e.strong,{children:"TRUNCATE"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"TRUNCATE 表名\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["方式2：使用不带WHERE的",(0,r.jsx)(e.strong,{children:"DELETE"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"DELETE FROM 表名\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"DROP、DELETE和TRUNCATE的区别"}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"DROP会删掉表结构，DELETE和TRUNCATE是删除表数据，保留表结构"}),"\n",(0,r.jsxs)(e.li,{children:["DELETE是DML（数据库操作语言），TRUNCATE是DDL（数据库定义语言）。因此",(0,r.jsx)(e.strong,{children:"DELETE可以回滚，TRUNCATE不可以回滚"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"使用DELETE，删除数据后表空间还在"}),"（在系统重启前，还可以恢复），",(0,r.jsx)(e.strong,{children:"TRUNCATE是将数据和表空间都删除了"})]}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"DELETE可以操作table、view，TRUNCATE只能操作table"})}),"\n",(0,r.jsxs)(e.li,{children:["如果表中id是自增型且步长为1，使用",(0,r.jsx)(e.strong,{children:"delete"}),"后，",(0,r.jsx)(e.strong,{children:"新插入的数据的id会原数数据的id上继续累加"}),"。使用",(0,r.jsx)(e.strong,{children:"TRUNCATE"}),"后，新",(0,r.jsx)(e.strong,{children:"插入的数据的id会从1开始"})]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1027-dcl中的commit和rollback",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1027-dcl中的commit和rollback",children:"#"}),"10.2.7 DCL中的COMMIT和ROLLBACK"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["COMMIT","：提交数据。一旦执行COMMIT，则数据就被永久的保存在了数据库中，意为着数据不可以回滚"]}),"\n",(0,r.jsxs)(e.li,{children:["ROLLBACK","：回滚数据。一旦ROLLBACK，则可以实现数据的回滚。",(0,r.jsx)(e.strong,{children:"回滚到最近的一次COMMIT之后"}),"。"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1028-ddl和dml的说明",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1028-ddl和dml的说明",children:"#"}),"10.2.8 DDL和DML的说明"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["① DDL的操作一旦执行，就不可以回滚。DDL操作执行完成后，会自动执行COMMIT操作，因此指令",(0,r.jsx)(e.code,{children:"SET autocommit= FALSE"}),"对DML无效。"]}),"\n",(0,r.jsxs)(e.li,{children:["② DML的操作默认情况下，一旦执行，也是不可回滚。但是如果在执行DML之前，执行了",(0,r.jsx)(e.code,{children:"SET autocommit= FALSE"}),"，则执行的DML操作就可以实现回滚"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"1029-表的其他操作",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1029-表的其他操作",children:"#"}),"10.2.9 表的其他操作"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 查看表结构\r\nDESC 表名;\r\n\r\n# 查看创建表的语句结构\r\nSHOW CREATE TABLE 表名;\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"10210-mysql80新特性ddl的原子化",children:[(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#10210-mysql80新特性ddl的原子化",children:"#"}),"10.2.10 MySQL8.0新特性：DDL的原子化"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"概述"}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["在MySQL 8.0版本中，",(0,r.jsx)(e.strong,{children:"InnoDB"}),"表的DDL支持事务完整性，即 ",(0,r.jsx)(e.code,{children:"DDL操作要么成功要么回滚"})," 。"]}),"\n",(0,r.jsx)(e.li,{children:"DDL操作回滚日志写入到data dictionary数据字典表mysql.innodb_ddl_log（该表是隐藏的表，通过show tables无法看到）中，用于回滚操作。通过设置参数，可将DDL操作日志打印输出到MySQL错误日志中。"}),"\n",(0,r.jsxs)(e.li,{children:["原子DDL操作这一特性，支持表相关操作，也支持非表相关操作。","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"表相关操作："})," drop、create、alter(操作对象是databases, tablespaces, tables, and indexes)语法、truncate语法"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"非表相关操作："})," create、drop、alter(操作对象是trigger、event、views)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"例子1：DROP表"}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["在数据库中创建表book1，同时保证当前数据库中没有book2表。执行",(0,r.jsx)(e.code,{children:"DROP TABLE book1, book2;"}),"，观察在MySQL5.7和MySQL8.0中的结果。"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"结果："}),"MySQL5.7中book1被删除，MySQL8.0中book1仍然存在。"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-mysql",meta:"",children:"# 创建数据库\r\nCREATE DATABASE mytest;\r\n\r\n# 使用数据库\r\nUSE mytest;\r\n\r\n# 创建book1表\r\nCREATE TABLE book1 (\r\n	id INT,\r\n	`name` VARCHAR(30) \r\n);\r\n\r\n# 显示数据库中的表\r\nSHOW TABLES; # 结果为book1，表book1创建成功\r\n\r\n# 删除book1，book2。其中book2不存在，删除会报错\r\nDROP TABLE book1, book2; # Unknown table 'mytest.book2'\r\n\r\n# 再次显示数据库中的表\r\nSHOW TABLES; # NySQL5.7中，显示为空，表book1成功删除 \r\n			 # NySQL8.0中，结果为book1，表book1删除失败\n"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsx)(e.p,{children:"例子2：使用子查询创建表CREATE TABLE ... SELECT ..."}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["从",(0,r.jsx)(e.strong,{children:"MySQL8.0.21"}),"开始，在支持原子DDL的存储引擎上，当使用基于row的复制模式时，",(0,r.jsx)(e.strong,{children:"CREATE TABLE...SELECT...，该语句作为一个事务记录在二进制日志中"}),"。",(0,r.jsx)(e.strong,{children:"之前的版本中，它被记录为两个事务"}),"，一个用于create表，另一个用于insert数据。两个事务之间或插入数据时发生服务器故障",(0,r.jsx)(e.strong,{children:"可能导致复制了一张空表"}),"。通过引入原子DDL支持，CREATE TABLE ...SELECT语句现在对于基于行的复制是安全的，并且允许与基于GTID的复制一起使用。"]})]})}function i(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(d,n)})):d(n)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["tang%2Fmysql%2F10_%E7%AE%A1%E7%90%86%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8.md"]={toc:[{id:"101-创建和管理数据库",text:"10.1 创建和管理数据库",depth:2},{id:"1011-创建数据库",text:"10.1.1 创建数据库",depth:3},{id:"1012-修改数据库",text:"10.1.2 修改数据库",depth:3},{id:"1013-删除数据库",text:"10.1.3 删除数据库",depth:3},{id:"1014-数据库其他操作",text:"10.1.4 数据库其他操作",depth:3},{id:"102-创建和管理数据库表",text:"10.2 创建和管理数据库表",depth:2},{id:"1021-创建表",text:"10.2.1 创建表",depth:3},{id:"1022-修改表",text:"10.2.2 修改表",depth:3},{id:"1023-重命名表",text:"10.2.3 重命名表",depth:3},{id:"1024-删除表",text:"10.2.4 删除表",depth:3},{id:"1025-清空表",text:"10.2.5 清空表",depth:3},{id:"1027-dcl中的commit和rollback",text:"10.2.7 DCL中的COMMIT和ROLLBACK",depth:3},{id:"1028-ddl和dml的说明",text:"10.2.8 DDL和DML的说明",depth:3},{id:"1029-表的其他操作",text:"10.2.9 表的其他操作",depth:3},{id:"10210-mysql80新特性ddl的原子化",text:"10.2.10 MySQL8.0新特性：DDL的原子化",depth:3}],title:"10 数据库和数据库表的管理",headingTitle:"10 数据库和数据库表的管理",frontmatter:{}}}}]);