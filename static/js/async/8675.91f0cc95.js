"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["8675"],{42745:function(n,d,e){e.r(d),e.d(d,{default:function(){return i}});var r=e(85893),s=e(50065);function h(n){let d=Object.assign({h1:"h1",a:"a",p:"p",code:"code",strong:"strong",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3",em:"em",pre:"pre",h4:"h4"},(0,s.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(d.h1,{id:"python3基础查漏补缺",children:["python3基础查漏补缺",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#python3基础查漏补缺",children:"#"})]}),"\n",(0,r.jsxs)(d.h1,{id:"1运算符",children:["1.运算符",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#1运算符",children:"#"})]}),"\n",(0,r.jsxs)(d.p,{children:[(0,r.jsx)(d.code,{children:"**"})," 幂：",(0,r.jsx)(d.code,{children:"a**b"}),"表示a的b次方"]}),"\n",(0,r.jsxs)(d.p,{children:[(0,r.jsx)(d.code,{children:"//"}),"取整除--向下取接近商的整数：",(0,r.jsx)(d.code,{children:"9//2"}),"返回",(0,r.jsx)(d.code,{children:"4"}),"，",(0,r.jsx)(d.code,{children:"-9//2"}),"返回",(0,r.jsx)(d.code,{children:"-5"})]}),"\n",(0,r.jsxs)(d.p,{children:["​      ",(0,r.jsxs)(d.strong,{children:["注意： ",(0,r.jsx)(d.code,{children:"//"}),"得到的并不一定是整数类型的数，它与分母分子的数据类型有关系"]})]}),"\n",(0,r.jsxs)(d.p,{children:[(0,r.jsx)(d.code,{children:"/"}),"除法-返回一个浮点数"]}),"\n",(0,r.jsxs)(d.h1,{id:"2基本数据类型",children:["2.基本数据类型",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#2基本数据类型",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.strong,{children:"在Python中，变量就是变量，没有类型。我们所说的”类型“是变量所指的内存中对象的类型。"})}),"\n",(0,r.jsxs)(d.h2,{id:"21标准数据类型",children:["2.1标准数据类型",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#21标准数据类型",children:"#"})]}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{align:"left",children:"数据类型"}),"\n",(0,r.jsx)(d.th,{align:"center",children:"是否可变"}),"\n",(0,r.jsx)(d.th,{align:"center",children:"子类型/父级"}),"\n",(0,r.jsx)(d.th,{children:"备注"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"Number"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"不可变"}),"\n",(0,r.jsxs)(d.td,{align:"center",children:["子类型：","int、float、bool、complex"]}),"\n",(0,r.jsxs)(d.td,{children:["bool类型的变量可以和数字相加；","复数用a+bj或complex(a,b)表示；"]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"String"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"不可变"}),"\n",(0,r.jsxs)(d.td,{align:"center",children:["父级：","sequence"]}),"\n",(0,r.jsxs)(d.td,{children:["索引值：从左到右，从0开始递增；","               从右到左，从-1开始递减","字符串截取：",(0,r.jsx)(d.code,{children:"变量[头下标:尾下标]"}),"                      含头不含尾","                   尾下标不写表示直到最后一个元素","字符串重复：",(0,r.jsx)(d.code,{children:"变量*重复次数"}),"字符串连接：",(0,r.jsx)(d.code,{children:"变量+字符串"}),"字符串分割：",(0,r.jsx)(d.code,{children:'变量.split("分割规则")'}),"                        返回结果为List","包含：",(0,r.jsx)(d.code,{children:"字符串 in 变量"}),"            返回值为bool类型","不包含：",(0,r.jsx)(d.code,{children:"字符串 not in 变量"}),"                 返回值为bool类型"]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"List"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"可变"}),"\n",(0,r.jsxs)(d.td,{align:"center",children:["父级：","sequence"]}),"\n",(0,r.jsxs)(d.td,{children:["有序的对象集合；","同一列表中的元素类型可以不同；","索引值：从左到右，从0开始递增；","               从右到左，从-1开始递减","列表截取：",(0,r.jsx)(d.code,{children:"变量[头下标:尾下标]"}),"                      含头不含尾","                   尾下标不写表示直到最后一个元素","列表重复：",(0,r.jsx)(d.code,{children:"变量*重复次数"}),"列表连接：",(0,r.jsx)(d.code,{children:"变量+列表"})]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"Tuple"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"不可变"}),"\n",(0,r.jsxs)(d.td,{align:"center",children:["父级：","sequence"]}),"\n",(0,r.jsxs)(d.td,{children:["写在()中，元素之间用逗号隔开；","元素存取方式：偏移；","同一元组中的元素类型可以不同；","索引值：从左到右，从0开始递增；","               从右到左，从-1开始递减","元组截取：",(0,r.jsx)(d.code,{children:"变量[头下标:尾下标]"}),"                    含头不含尾","                   尾下标不写表示直到最后一个元素","元组重复：",(0,r.jsx)(d.code,{children:"变量*重复次数"}),"元组连接：",(0,r.jsx)(d.code,{children:"变量+元组"})]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"Set"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"可变"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"-"}),"\n",(0,r.jsxs)(d.td,{children:["无序的对象集合；","元素存取方式：键；","用大括号 ",(0,r.jsx)(d.code,{children:"{}"})," 或者 ",(0,r.jsx)(d.code,{children:"set()"})," 函数创建集合；","创建空集合必须使用",(0,r.jsx)(d.code,{children:"set()"}),";","基本功能：进行成员关系测试、","                    删除重复元素;","集合运算：",(0,r.jsx)(d.code,{children:"-"}),"求差集；","                   `"]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{align:"left",children:"Dictionary"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"可变"}),"\n",(0,r.jsx)(d.td,{align:"center",children:"-"}),"\n",(0,r.jsxs)(d.td,{children:["是一种映射类型；","用",(0,r.jsx)(d.code,{children:"{}"}),"标识；","是一种无序的 ",(0,r.jsx)(d.strong,{children:"键:值"})," 的集合；","同一个字典中",(0,r.jsx)(d.strong,{children:"键"}),"是唯一的；","获取指定的键的值：",(0,r.jsx)(d.code,{children:"变量[键]"}),"；","获取所有的键：",(0,r.jsx)(d.code,{children:"变量.keys()"}),";","获取所有的值：",(0,r.jsx)(d.code,{children:"变量.values()"}),";","清空字典：",(0,r.jsx)(d.code,{children:"变量.clear()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h2,{id:"22-python数据类型转换",children:["2.2 Python数据类型转换",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#22-python数据类型转换",children:"#"})]}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"函数"}),"\n",(0,r.jsx)(d.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"int(x[,base])"}),"\n",(0,r.jsx)(d.td,{children:"将x转换为一个整数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"float(x)"}),"\n",(0,r.jsx)(d.td,{children:"将x转换为一个浮点数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"complex(real[,imag])"}),"\n",(0,r.jsx)(d.td,{children:"创建一个复数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"str(x)"}),"\n",(0,r.jsx)(d.td,{children:"将对象x转为字符串"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"repr(x)"}),"\n",(0,r.jsx)(d.td,{children:"将对象x转为表达式字符串"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"eval(str)"}),"\n",(0,r.jsx)(d.td,{children:"用来计算在字符串中的有效Python表达式，并返回一个对象"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"tuple(s)"}),"\n",(0,r.jsx)(d.td,{children:"将序列s转换为一个元祖"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"list(s)"}),"\n",(0,r.jsx)(d.td,{children:"将序列s转换为一个列表"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"set(s)"}),"\n",(0,r.jsx)(d.td,{children:"转换为可变集合"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"dict(d)"}),"\n",(0,r.jsx)(d.td,{children:"创建一个字典。d必须是一个(key, vakue)元组序列"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"frozenset(s)"}),"\n",(0,r.jsx)(d.td,{children:"转换为不可变集合"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"chr(x)"}),"\n",(0,r.jsx)(d.td,{children:"将一个整数转换为一个字符"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"ord(x)"}),"\n",(0,r.jsx)(d.td,{children:"将一个字符转换为他的整数值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"hex(x)"}),"\n",(0,r.jsx)(d.td,{children:"将一个整数转换为一个16进制字符串"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"oct(x)"}),"\n",(0,r.jsx)(d.td,{children:"将一个整数转换为一个8进制字符串"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h2,{id:"23-数字类型number",children:["2.3 数字类型Number",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#23-数字类型number",children:"#"})]}),"\n",(0,r.jsxs)(d.h3,{id:"231-数学函数",children:["2.3.1 数学函数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#231-数学函数",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.em,{children:(0,r.jsx)(d.strong,{children:"以下函数调用，均以【math.XX】形式"})})}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"函数"}),"\n",(0,r.jsx)(d.th,{children:"作用"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"abs(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的绝对值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"fabs(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的绝对值，带小数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"exp(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回e的x次幂"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"ceil(x)"}),"\n",(0,r.jsx)(d.td,{children:"对x向上取整"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"floor(x)"}),"\n",(0,r.jsx)(d.td,{children:"对x向下取整"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"log(x)"}),"\n",(0,r.jsx)(d.td,{children:"如math.log(math.e)返回1.0,math.log(100,10)返回2.0"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"log10(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回以10为底x的对数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"acos(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的反余弦弧度值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"asin(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的反正弦弧度值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"atan(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的反正切弧度值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"atan2(y,x)"}),"\n",(0,r.jsx)(d.td,{children:"返回给定的x及y坐标值的反正切值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"cos(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的余弦值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"sin(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的正弦值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"tan(x)"}),"\n",(0,r.jsx)(d.td,{children:"返回x的正切值"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"degrees(x)"}),"\n",(0,r.jsx)(d.td,{children:"将弧度转换为角度"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"randians(x)"}),"\n",(0,r.jsx)(d.td,{children:"将角度转换为弧度"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"hypot(x,y)"}),"\n",(0,r.jsx)(d.td,{children:"返回欧几里得范数 sqrt(x*x+y*y)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h3,{id:"232--随机函数",children:["2.3.2  随机函数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#232--随机函数",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.em,{children:(0,r.jsx)(d.strong,{children:"以下函数调用，均以【random.XX】形式"})})}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"函数"}),"\n",(0,r.jsx)(d.th,{children:"作用"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"choice(seq)"}),"\n",(0,r.jsx)(d.td,{children:"从序列中随机挑选一个元素"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"randrange([start,]stop[,step])"}),"\n",(0,r.jsx)(d.td,{children:"从指定单位内，按指定基数递增的集合中获取一个随机数，基数默认值为1"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"random()"}),"\n",(0,r.jsx)(d.td,{children:"生成[0,1)的随机数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"seed([x])"}),"\n",(0,r.jsx)(d.td,{children:"改变随机数生成器的种子"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"shuffle(lst)"}),"\n",(0,r.jsx)(d.td,{children:"将序列中的所有元素随机排序"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"uniform(x,y)"}),"\n",(0,r.jsx)(d.td,{children:"随机生成一个实数，范围为[x,y]"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h2,{id:"24字符串",children:["2.4字符串",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#24字符串",children:"#"})]}),"\n",(0,r.jsxs)(d.h3,{id:"241-字符串格式化",children:["2.4.1 字符串格式化",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#241-字符串格式化",children:"#"})]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:"print (\"我叫 %s 今年 %d 岁!\" % ('小明', 10))\r\n\r\n# 输出结果为：我叫 小明 今年 10 岁!\n"})}),"\n",(0,r.jsxs)(d.h4,{id:"2411-字符串格式化符号",children:["2.4.1.1 字符串格式化符号",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#2411-字符串格式化符号",children:"#"})]}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"符号"}),"\n",(0,r.jsx)(d.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%c"}),"\n",(0,r.jsx)(d.td,{children:"格式化字符集ASCII码"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%s"}),"\n",(0,r.jsx)(d.td,{children:"格式化字符串"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%d"}),"\n",(0,r.jsx)(d.td,{children:"格式化整数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%u"}),"\n",(0,r.jsx)(d.td,{children:"格式化无符号整数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%o"}),"\n",(0,r.jsx)(d.td,{children:"格式化无符号八进制数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%x"}),"\n",(0,r.jsx)(d.td,{children:"格式化无符号十六进制数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%X"}),"\n",(0,r.jsx)(d.td,{children:"格式化无粗豪十六进制数（大写）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%f"}),"\n",(0,r.jsx)(d.td,{children:"格式化浮点数，可指定小数点后的经度"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%e"}),"\n",(0,r.jsx)(d.td,{children:"用科学计数法格式化浮点数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%E"}),"\n",(0,r.jsx)(d.td,{children:"同%e"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%g"}),"\n",(0,r.jsx)(d.td,{children:"%f 和 %e 的缩写"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%G"}),"\n",(0,r.jsx)(d.td,{children:"%f 和 %E 的缩写"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%p"}),"\n",(0,r.jsx)(d.td,{children:"用十六进制数格式化变量的地址"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h4,{id:"2412-格式化操作符辅助指令",children:["2.4.1.2 格式化操作符辅助指令",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#2412-格式化操作符辅助指令",children:"#"})]}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"符号"}),"\n",(0,r.jsx)(d.th,{children:"功能"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"*"}),"\n",(0,r.jsx)(d.td,{children:"定义宽度或者小数点精度"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"-"}),"\n",(0,r.jsx)(d.td,{children:"左对齐"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"+"}),"\n",(0,r.jsx)(d.td,{children:"在正数前面显示加号"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"<sp>"}),"\n",(0,r.jsx)(d.td,{children:"在正数前面显示空格"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"#"}),"\n",(0,r.jsx)(d.td,{children:"在八进制数前面显示零('0')，在十六进制前面显示'0x'或者'0X'(取决于用的是'x'还是'X')"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"0"}),"\n",(0,r.jsx)(d.td,{children:"显示的数字前面填充'0'而不是默认的空格"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%"}),"\n",(0,r.jsx)(d.td,{children:"'%%'输出一个单一的'%'"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"(var)"}),"\n",(0,r.jsx)(d.td,{children:"映射变量(字典参数)"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"m.n."}),"\n",(0,r.jsx)(d.td,{children:"m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.p,{children:["Python2.6 开始，新增了一种格式化字符串的函数",(0,r.jsx)(d.code,{children:"str.fromat()"}),"，它增强了字符串格式化的功能。"]}),"\n",(0,r.jsxs)(d.h4,{id:"2413-strformat",children:["2.4.1.3 str.format()",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#2413-strformat",children:"#"})]}),"\n",(0,r.jsxs)(d.p,{children:["基本语法是通过",(0,r.jsx)(d.code,{children:"{}"})," 和 ",(0,r.jsx)(d.code,{children:":"}),"来代替以前的 ",(0,r.jsx)(d.code,{children:"%"})," 。"]}),"\n",(0,r.jsx)(d.p,{children:"format 函数可以接受不限个参数，位置可以不按顺序。"}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:'>>>"{} {}".format("hello", "world")    # 不设置指定位置，按默认顺序\r\n\'hello world\'\r\n \r\n>>> "{0} {1}".format("hello", "world")  # 设置指定位置\r\n\'hello world\'\r\n \r\n>>> "{1} {0} {1}".format("hello", "world")  # 设置指定位置\r\n\'world hello world\'\n'})}),"\n",(0,r.jsxs)(d.h3,{id:"242-三引号",children:["2.4.2 三引号",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#242-三引号",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:"允许一个字符串跨多行。"}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:"errHTML = '''\r\n<HTML><HEAD><TITLE>\r\nFriends CGI Demo</TITLE></HEAD>\r\n<BODY><H3>ERROR</H3>\r\n<B>%s</B><P>\r\n<FORM><INPUT TYPE=button VALUE=Back\r\nONCLICK=\"window.history.back()\"></FORM>\r\n</BODY></HTML>\r\n'''\n"})}),"\n",(0,r.jsxs)(d.h3,{id:"243-内置函数",children:["2.4.3 内置函数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#243-内置函数",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.em,{children:(0,r.jsx)(d.strong,{children:"以下函数调用，均以【变量名.XX】形式"})})}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"函数"}),"\n",(0,r.jsx)(d.th,{children:"作用"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"capitalize()"}),"\n",(0,r.jsx)(d.td,{children:"把字符串的第一个字符大写"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"center(width[, fillchar])"}),"\n",(0,r.jsx)(d.td,{children:"返回一个原字符串居中,并使用空格填充至长度 width 的新字符串。默认填充字符为空格。"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"count(sub[, start, end])"}),"\n",(0,r.jsx)(d.td,{children:"统计子字符sub出现的次数。可选参数为在字符串搜索的开始与结束位置"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"decode(encoding, errors)"}),"\n",(0,r.jsxs)(d.td,{children:["以 ",(0,r.jsx)(d.em,{children:"encoding"})," 指定的编码格式解码字符串，若出错默认报一个 ValueError 的 异 常。","errors -- 设置不同错误的处理方案。默认为 'strict',意为编码错误引起一个UnicodeError。 其他可能得值有 'ignore', 'replace', 'xmlcharrefreplace', 'backslashreplace' 以及通过 codecs.register_error() 注册的任何值"]}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"encode(encoding, errors)"}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{}),"\n",(0,r.jsx)(d.td,{}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h1,{id:"3时间",children:["3.时间",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#3时间",children:"#"})]}),"\n",(0,r.jsxs)(d.h2,{id:"31-时间戳",children:["3.1 时间戳",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#31-时间戳",children:"#"})]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:' \r\nimport time  # 引入time模块\r\n \r\nticks = time.time()\r\nprint "当前时间戳为:", ticks\r\n\r\n# 输出结果：当前时间戳为: 1459994552.51\n'})}),"\n",(0,r.jsxs)(d.h2,{id:"32-获取当前时间",children:["3.2 获取当前时间",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#32-获取当前时间",children:"#"})]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:'import time\r\n \r\nlocaltime = time.localtime(time.time())\r\nprint "本地时间为 :", localtime\r\n\r\n# 输出结果：本地时间为 : time.struct_time(tm_year=2016, tm_mon=4, tm_mday=7, tm_hour=10, tm_min=3, tm_sec=27, tm_wday=3, tm_yday=98, tm_isdst=0)\n'})}),"\n",(0,r.jsxs)(d.h2,{id:"33-获取格式化时间",children:["3.3 获取格式化时间",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#33-获取格式化时间",children:"#"})]}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:'import time\r\n \r\nlocaltime = time.asctime( time.localtime(time.time()) )\r\nprint "本地时间为 :", localtime\r\n# 输出结果为：本地时间为 : Thu Apr  7 10:05:21 2016\r\n\r\n# 格式化成2016-03-20 11:45:39形式\r\nprint time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) \r\n \r\n# 格式化成Sat Mar 28 22:24:24 2016形式\r\nprint time.strftime("%a %b %d %H:%M:%S %Y", time.localtime()) \r\n  \r\n# 将格式字符串转换为时间戳\r\na = "Sat Mar 28 22:24:24 2016"\r\nprint time.mktime(time.strptime(a,"%a %b %d %H:%M:%S %Y"))\n'})}),"\n",(0,r.jsx)(d.p,{children:"时间格式化符号："}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"符号"}),"\n",(0,r.jsx)(d.th,{children:"意义"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%y"}),"\n",(0,r.jsx)(d.td,{children:"两位数的年份表示(00-99)"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%Y"}),"\n",(0,r.jsx)(d.td,{children:"四位数的年份表示"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%m"}),"\n",(0,r.jsx)(d.td,{children:"月份（01-12）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%d"}),"\n",(0,r.jsx)(d.td,{children:"月内某一天（01-31）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%H"}),"\n",(0,r.jsx)(d.td,{children:"24小时制小时数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%l"}),"\n",(0,r.jsx)(d.td,{children:"12小时制小时数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%M"}),"\n",(0,r.jsx)(d.td,{children:"分钟数"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%S"}),"\n",(0,r.jsx)(d.td,{children:"秒"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%a"}),"\n",(0,r.jsx)(d.td,{children:"本地简化星期名"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%A"}),"\n",(0,r.jsx)(d.td,{children:"本地完整星期名"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%b"}),"\n",(0,r.jsx)(d.td,{children:"本地简化月份名"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%B"}),"\n",(0,r.jsx)(d.td,{children:"本地完整月份名"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%c"}),"\n",(0,r.jsx)(d.td,{children:"本地相应的日期表示和时间表示"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%j"}),"\n",(0,r.jsx)(d.td,{children:"年内某一天（001-366）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%p"}),"\n",(0,r.jsx)(d.td,{children:"本地A.M.或P.M.的等价符"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%U"}),"\n",(0,r.jsx)(d.td,{children:"一年中的星期数（00-53），以周日为星期的开始"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%u"}),"\n",(0,r.jsx)(d.td,{children:"一年中的星期数（0-53），以周日为星期的开始"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%W"}),"\n",(0,r.jsx)(d.td,{children:"一年中的星期数（00-53），以周一为星期的开始"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%w"}),"\n",(0,r.jsx)(d.td,{children:"一年中的星期数（0-53），以周一为星期的开始"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%x"}),"\n",(0,r.jsx)(d.td,{children:"本地对应的日期表示（月/日/年）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%X"}),"\n",(0,r.jsx)(d.td,{children:"本地相应的时间表示（时:分:秒）"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%Z"}),"\n",(0,r.jsx)(d.td,{children:"当前市区的名称"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"%%"}),"\n",(0,r.jsx)(d.td,{children:"%本身"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h1,{id:"4函数",children:["4.函数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#4函数",children:"#"})]}),"\n",(0,r.jsxs)(d.h2,{id:"41-参数传递",children:["4.1 参数传递",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#41-参数传递",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:"与java中的值传递和引用传递类似，因为python中一切都是对象，因此所谓的值传递和引用传递，严格来说就是传不可变类型和传可变类型。"}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"参数类型"}),"\n",(0,r.jsx)(d.th,{children:"举例"}),"\n",(0,r.jsx)(d.th,{children:"说明"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"不可变类型"}),"\n",(0,r.jsx)(d.td,{children:"Number，String，元组"}),"\n",(0,r.jsx)(d.td,{children:"函数中修改参数的值，对函数外部的对象本身的值没有影响"}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"可变类型"}),"\n",(0,r.jsx)(d.td,{children:"List，字典，Set"}),"\n",(0,r.jsx)(d.td,{children:"一旦在函数中修改了参数的值，函数外部的对象也会被修改"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h2,{id:"42-参数类型",children:["4.2 参数类型",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#42-参数类型",children:"#"})]}),"\n",(0,r.jsxs)(d.table,{children:["\n",(0,r.jsxs)(d.thead,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.th,{children:"参数类型"}),"\n",(0,r.jsx)(d.th,{children:"说明"}),"\n",(0,r.jsx)(d.th,{children:"例子"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.tbody,{children:["\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"必备参数"}),"\n",(0,r.jsxs)(d.td,{children:["必备参数须以正确的顺序传入函数;","调用时的数量必须和声明时的一样"]}),"\n",(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:'<img src="../images/python3基础查漏补缺/python-base-fun1.png"  />'})}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"关键字参数"}),"\n",(0,r.jsx)(d.td,{children:"使用关键字参数允许函数调用时参数的顺序与声明时不一致"}),"\n",(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:'<img src="../images/python3基础查漏补缺\\python-base-fun2.png"  />'})}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"默认参数"}),"\n",(0,r.jsx)(d.td,{children:"调用函数时，默认参数的值如果没有传入，则被认为是默认值"}),"\n",(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:'<img src="../images/python3基础查漏补缺\\python-base-fun3.png"  />'})}),"\n"]}),"\n",(0,r.jsxs)(d.tr,{children:["\n",(0,r.jsx)(d.td,{children:"不定长参数"}),"\n",(0,r.jsxs)(d.td,{children:["一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数;","加了星号（*）的变量名会存放所有未命名的变量参数"]}),"\n",(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:'<img src="../images/python3基础查漏补缺\\python-base-fun4.png"  />'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(d.h2,{id:"43-匿名函数",children:["4.3 匿名函数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#43-匿名函数",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:(0,r.jsx)(d.strong,{children:"python 使用 lambda 来创建匿名函数。"})}),"\n",(0,r.jsx)(d.p,{children:"1）lambda主体是一个表达式"}),"\n",(0,r.jsx)(d.p,{children:"2）lambda函数拥有自己的命名空间，且不能访问自己的参数列表之外或者全局命名空间里的参数"}),"\n",(0,r.jsx)(d.p,{children:"3）语法："}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:"lambda [arg1 [,arg2,.....argn]]:expression\n"})}),"\n",(0,r.jsx)(d.p,{children:"eg."}),"\n",(0,r.jsx)(d.pre,{children:(0,r.jsx)(d.code,{className:"language-python",children:'#!/usr/bin/python3\r\n \r\n# 可写函数说明\r\nsum = lambda arg1, arg2: arg1 + arg2\r\n \r\n# 调用sum函数\r\nprint ("相加后的值为 : ", sum( 10, 20 ))\r\n\r\n# 输出结果：相加后的值为 : 30\n'})}),"\n",(0,r.jsxs)(d.h2,{id:"44-return-语句",children:["4.4 return 语句",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#44-return-语句",children:"#"})]}),"\n",(0,r.jsxs)(d.p,{children:[(0,r.jsx)(d.code,{children:"return [表达式]"}),"语句用于退出函数，选择性地向调用方返回一个表达式。不带参数值的return语句返回None。"]}),"\n",(0,r.jsxs)(d.h2,{id:"45强制位置参数",children:["4.5强制位置参数",(0,r.jsx)(d.a,{className:"header-anchor","aria-hidden":"true",href:"#45强制位置参数",children:"#"})]}),"\n",(0,r.jsx)(d.p,{children:"python 3.8新语法"})]})}function t(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:d}=Object.assign({},(0,s.ah)(),n.components);return d?(0,r.jsx)(d,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}let i=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["tang%2FPython%2F1.md"]={toc:[{text:"2.1标准数据类型",id:"21标准数据类型",depth:2},{text:"2.2 Python数据类型转换",id:"22-python数据类型转换",depth:2},{text:"2.3 数字类型Number",id:"23-数字类型number",depth:2},{text:"2.3.1 数学函数",id:"231-数学函数",depth:3},{text:"2.3.2  随机函数",id:"232--随机函数",depth:3},{text:"2.4字符串",id:"24字符串",depth:2},{text:"2.4.1 字符串格式化",id:"241-字符串格式化",depth:3},{text:"2.4.1.1 字符串格式化符号",id:"2411-字符串格式化符号",depth:4},{text:"2.4.1.2 格式化操作符辅助指令",id:"2412-格式化操作符辅助指令",depth:4},{text:"2.4.1.3 str.format()",id:"2413-strformat",depth:4},{text:"2.4.2 三引号",id:"242-三引号",depth:3},{text:"2.4.3 内置函数",id:"243-内置函数",depth:3},{text:"3.1 时间戳",id:"31-时间戳",depth:2},{text:"3.2 获取当前时间",id:"32-获取当前时间",depth:2},{text:"3.3 获取格式化时间",id:"33-获取格式化时间",depth:2},{text:"4.1 参数传递",id:"41-参数传递",depth:2},{text:"4.2 参数类型",id:"42-参数类型",depth:2},{text:"4.3 匿名函数",id:"43-匿名函数",depth:2},{text:"4.4 return 语句",id:"44-return-语句",depth:2},{text:"4.5强制位置参数",id:"45强制位置参数",depth:2}],title:"4.函数",frontmatter:{}}}}]);