"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["9903"],{90857:function(n,e,l){l.r(e),l.d(e,{default:function(){return d}});var s=l(85893),i=l(50065);function r(n){let e=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",ul:"ul",li:"li",strong:"strong",h2:"h2",code:"code"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"3-关系型数据库设计原则",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-关系型数据库设计原则",children:"#"}),"3 关系型数据库设计原则"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"前言"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["关系型数据库的典型数据结构就是 ",(0,s.jsx)(e.strong,{children:"数据表"})," ，这些数据表的组成都是",(0,s.jsx)(e.strong,{children:"结构化的（Structured）"}),"。"]}),"\n",(0,s.jsx)(e.li,{children:"将数据放到表中，表再放到库中。"}),"\n",(0,s.jsx)(e.li,{children:"一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。"}),"\n",(0,s.jsx)(e.li,{children:"表名具有唯一性。 表具有一些特性，这些特性定义了数据在表中如何存储，类似Java和Python中 “类”的设计。"}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"31-表记录字段",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#31-表记录字段",children:"#"}),"3.1 表、记录、字段"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"E-R"}),"（entity-relationship，实体-联系）模型中有三个主要概念是： ",(0,s.jsx)(e.code,{children:"实体集"})," 、 ",(0,s.jsx)(e.code,{children:"属性"})," 、 ",(0,s.jsx)(e.code,{children:"联系集 "}),"。"]}),"\n",(0,s.jsxs)(e.li,{children:["一个实体集（class）对应于数据库中的一个",(0,s.jsx)(e.strong,{children:"表（table"}),"），一个实体（instance）则对应于数据库表 中的一",(0,s.jsx)(e.strong,{children:"行（row）"}),"，也称为一条",(0,s.jsx)(e.strong,{children:"记录（record）"}),"。一个属性（attribute）对应于数据库表中的一",(0,s.jsx)(e.strong,{children:"列 （column）"}),"，也称为一个",(0,s.jsx)(e.strong,{children:"字段（field）"}),"。"]}),"\n",(0,s.jsxs)(e.li,{children:["ORM思想 (Object Relational Mapping)体现：","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"数据库中的一个表 <---\x3e Java或Python中的一个类"}),"\n",(0,s.jsx)(e.li,{children:"表中的一条数据 <---\x3e 类中的一个对象（或实例）"}),"\n",(0,s.jsx)(e.li,{children:"表中的一个列 <----\x3e 类中的一个字段、属性(field)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"32-表的关联关系",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#32-表的关联关系",children:"#"}),"3.2 表的关联关系"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"概述"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"表与表之间的数据记录有关系(relationship)。现实世界中的各种实体以及实体之间的各种联系均用 关系模型来表示。"}),"\n",(0,s.jsx)(e.li,{children:"分类：一对一关联、一对多关联、多对多关联、自我引用"}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"一对一关联（one-to-one）"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"在实际的开发中应用不多，因为一对一可以创建成一张表。"}),"\n",(0,s.jsxs)(e.li,{children:["举例：设计 ",(0,s.jsx)(e.code,{children:"学生表"})," ：学号、姓名、手机号码、班级、系别、身份证号码、家庭住址、籍贯、紧急 联系人、...","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"拆为两个表：两个表的记录是一一对应关系。"}),"\n",(0,s.jsx)(e.li,{children:"基础信息表 （常用信息）：学号、姓名、手机号码、班级、系别"}),"\n",(0,s.jsx)(e.li,{children:"档案信息表 （不常用信息）：学号、身份证号码、家庭住址、籍贯、紧急联系人、..."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["两种建表原则","：","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"外键唯一：主表的主键和从表的外键（唯一），形成主外键关系，外键唯一。"}),"\n",(0,s.jsx)(e.li,{children:"外键是主键：主表的主键和从表的主键，形成主外键关系。"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"一对多关系（one-to-many）"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"常见实例场景： 客户表和订单表 ， 分类表和商品表 ， 部门表和员工表 。"}),"\n",(0,s.jsx)(e.li,{children:"举例： 员工表：编号、姓名、...、所属部门 部门表：编号、名称、简介"}),"\n",(0,s.jsxs)(e.li,{children:["一对多建表原则","：在从表(多方)创建一个字段，字段作为外键指向主表(一方)的主键"]}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"多对多（many-to-many）"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["定义：要表示多对多关系，必须创建第三个表，该表通常称为 ",(0,s.jsx)(e.strong,{children:"联接表"})," ，它将多对多关系划分为两个一对多关 系。将这两个表的主键都插入到第三个表中。"]}),"\n",(0,s.jsxs)(e.li,{children:["举例：","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"学生和课程（一个学生可以选多门课程，一个课程可以被多名学生选择）：学生表、课程表、学生选课信息表"}),"\n",(0,s.jsx)(e.li,{children:"产品和订单（一个产品可以出现在多个订单中，一个订单可以有多个产品）：产品表、订单表、订单明细表"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"自我引用(Self reference)"}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"举例：员工表中属性：员工编号，员工姓名，员工主管编号，...。其中员工主管编号就是员工主管的员工编号。表中字段指向了另一个字段。"}),"\n"]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(r,n)})):r(n)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["tang%2Fmysql%2F03_%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.md"]={toc:[{id:"31-表记录字段",text:"3.1 表、记录、字段",depth:2},{id:"32-表的关联关系",text:"3.2 表的关联关系",depth:2}],title:"3 关系型数据库设计原则",headingTitle:"3 关系型数据库设计原则",frontmatter:{}}}}]);