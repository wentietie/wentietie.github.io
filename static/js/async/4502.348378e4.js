"use strict";(self.webpackChunkmy_doc=self.webpackChunkmy_doc||[]).push([["4502"],{93739:function(n,e,s){s.r(e),s.d(e,{default:()=>x});var d=s("85893"),r=s("50065");let i=s.p+"static/image/02_img2.5ed6ca53.png",c=s.p+"static/image/02_img.a359e57e.png";function h(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",img:"img",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",code:"code",pre:"pre"},(0,r.ah)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"2-java基本语法",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-java基本语法",children:"#"}),"2 Java基本语法"]}),"\n",(0,d.jsxs)(e.h2,{id:"21-变量的分类",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#21-变量的分类",children:"#"}),"2.1 变量的分类"]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"按照数据类型分"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:i})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"基本数据类型"}),"\n",(0,d.jsxs)(e.table,{children:[(0,d.jsx)(e.thead,{children:(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.th,{children:"类型"}),(0,d.jsx)(e.th,{children:"占用存储空间"}),(0,d.jsx)(e.th,{children:"表数范围"}),(0,d.jsx)(e.th,{children:"备注"})]})}),(0,d.jsxs)(e.tbody,{children:[(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"byte"}),(0,d.jsx)(e.td,{children:"1字节=8bit位"}),(0,d.jsx)(e.td,{children:"[-128, 127]"}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"short"}),(0,d.jsx)(e.td,{children:"2字节"}),(0,d.jsx)(e.td,{children:"[$-2^{15}$, $2^{15}-1$]"}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"int"}),(0,d.jsx)(e.td,{children:"4字节"}),(0,d.jsx)(e.td,{children:"[$-2^{32}$, $2^{32}-1$]"}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"long"}),(0,d.jsx)(e.td,{children:"8字节"}),(0,d.jsx)(e.td,{children:"[$-2^{64}$, $2^{64}-1$]"}),(0,d.jsxs)(e.td,{children:["声明变量时，需要在后边加上",(0,d.jsx)(e.strong,{children:"l"}),"或",(0,d.jsx)(e.strong,{children:"L"})]})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"float"}),(0,d.jsx)(e.td,{children:"4字节"}),(0,d.jsx)(e.td,{children:"[$-3.403E^{38}$, $3.403E^{38}$]"}),(0,d.jsxs)(e.td,{children:["单精度，尾数可以精确到7位有效数字；",(0,d.jsx)(e.strong,{children:"数值范围比long还大"})]})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"double"}),(0,d.jsx)(e.td,{children:"8字节"}),(0,d.jsx)(e.td,{children:"[$-1.798E^{308}$, $1.798E^{308}$]"}),(0,d.jsxs)(e.td,{children:["双精度（",(0,d.jsx)(e.strong,{children:"默认的浮点型"}),"）"]})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"char"}),(0,d.jsx)(e.td,{children:"2字节（1个字符）"}),(0,d.jsx)(e.td,{children:"--"}),(0,d.jsxs)(e.td,{children:["声明时，通常使一对",(0,d.jsx)(e.strong,{children:"单引号"}),"；","char c = '';//编译不通过"]})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"boolean"}),(0,d.jsx)(e.td,{children:"--"}),(0,d.jsx)(e.td,{children:"--"}),(0,d.jsx)(e.td,{children:"取值只能是true或false"})]})]})]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"引用数据类型"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"类"}),"\n",(0,d.jsx)(e.li,{children:"接口"}),"\n",(0,d.jsx)(e.li,{children:"数组"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"按声明的位置的不同分"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:c})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:"注："})," 二者在初始化值方面的异同："]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"同：都有声明周期"}),"\n",(0,d.jsx)(e.li,{children:"异：局部变量除形参外，需显示初始化"}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"22---基本数据类型间的运算规则",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#22---基本数据类型间的运算规则",children:"#"}),"2.2   基本数据类型间的运算规则"]}),"\n","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"自动类型提升"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"byte、char、short--\x3eint--\x3elong--\x3efloat--\x3edouble"})}),"\n",(0,d.jsx)(e.p,{children:"结论："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"容量小的数据类型的变量与容量大的做运算时，结果自动提升为容量大的数据类型的数据"}),"\n",(0,d.jsx)(e.li,{children:"特别的，大概byte、char、short三种类型的变量做运算时，结果为int型"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"强制类型转换"}),"\n",(0,d.jsxs)(e.p,{children:["强制类型转换，","可能","会造成经度的损失"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"short s = 128; byte b = (byte)s"}),"，b的值为","-128","，也是一种精度的损失"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"23-关于进制",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#23-关于进制",children:"#"}),"2.3 关于进制"]}),"\n",(0,d.jsxs)(e.table,{children:[(0,d.jsx)(e.thead,{children:(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.th,{children:"进制"}),(0,d.jsx)(e.th,{children:"数值范围"}),(0,d.jsx)(e.th,{children:"写法"}),(0,d.jsx)(e.th,{children:"备注"})]})}),(0,d.jsxs)(e.tbody,{children:[(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"二进制"}),(0,d.jsx)(e.td,{children:"0,1"}),(0,d.jsxs)(e.td,{children:["以","0b","或","0B","开头"]}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"十进制"}),(0,d.jsx)(e.td,{children:"0-9"}),(0,d.jsx)(e.td,{}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"八进制"}),(0,d.jsx)(e.td,{children:"0-7"}),(0,d.jsxs)(e.td,{children:["以","0","开头"]}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"十六进制"}),(0,d.jsx)(e.td,{children:"0-9及A-F"}),(0,d.jsxs)(e.td,{children:["以","0x","或","0X","开头"]}),(0,d.jsx)(e.td,{children:"A-F不区分大小写"})]})]})]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"二进制"}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["计算机底层都是以","补码","的形式存储数据。"]}),"\n",(0,d.jsx)(e.p,{children:"正数的原码、反码、补码都是一样的，负数的反码是除符号位，对原码各位取反，补码则为反码+1。"}),"\n",(0,d.jsxs)(e.h2,{id:"24-与--",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#24-与--",children:"#"}),"2.4 ++与--"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"前++（前--）：先自增（减）1，再运算"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"int a = 10;\r\nint b = ++a;\r\n// 结果：a=11，b=11\n"})}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"后++（后--）：先运算，再自增（减）1"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"int a = 10;\r\nint b = a++;\r\n// 结果： a=11， b=10\n"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["++和--不会改变数据类型","，如以下代码能正常运行："]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"short s = 10;\r\ns++;\r\n// 结果： s\n"})}),"\n",(0,d.jsxs)(e.h2,{id:"25-赋值运算符",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#25-赋值运算符",children:"#"}),"2.5 赋值运算符"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"="}),"、",(0,d.jsx)(e.code,{children:"+="}),"、",(0,d.jsx)(e.code,{children:"-="}),"、",(0,d.jsx)(e.code,{children:"*="}),"、",(0,d.jsx)(e.code,{children:"/="}),"、",(0,d.jsx)(e.code,{children:"%="})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"+=、-=、*=、/=、%=不会改变数据类型"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"short s = 10;\r\ns = s + 1; // 编译不通过\r\ns += 1; // 正确，s值为11，short类型\r\n\r\nint i = 1;\r\ni *= 0.1; // 正确，i值为0\n"})}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:["与",(0,d.jsx)(e.code,{children:"++"}),"相关的计算题"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"int n = 10;\r\nn += (n++) + (++n);\r\n// 上式可以等价写为：n = n + (n++) + (++n),==>n = 10 + 10 + 12=32\n"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"26-逻辑运算符",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#26-逻辑运算符",children:"#"}),"2.6 逻辑运算符"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"&"}),"、 ",(0,d.jsx)(e.code,{children:"&&"}),"、 ",(0,d.jsx)(e.code,{children:"|"}),"、 ",(0,d.jsx)(e.code,{children:"||"}),"、 ",(0,d.jsx)(e.code,{children:"!"}),"、 ",(0,d.jsx)(e.code,{children:"^"})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"&"}),"、 ",(0,d.jsx)(e.code,{children:"&&"}),"的对比"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"&"}),"称","逻辑与","，",(0,d.jsx)(e.code,{children:"&&"}),"称","短路与"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"相同点1：二者运算结果相同"}),"\n",(0,d.jsx)(e.li,{children:"相同点2：当符号左边是true时，二者都会执行符号右边的运算"}),"\n",(0,d.jsxs)(e.li,{children:["不同点：当符号左边是false时，",(0,d.jsx)(e.code,{children:"&"}),"会继续执行符号右边运算，",(0,d.jsx)(e.code,{children:"&&"}),"不再执行符号右边的运算"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"|"}),"、 ",(0,d.jsx)(e.code,{children:"||"}),"的对比"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"|"}),"称","逻辑或","，",(0,d.jsx)(e.code,{children:"||"}),"称","短路或"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"相同点1：二者运算结果相同"}),"\n",(0,d.jsx)(e.li,{children:"相同点2：当符号左边是false时，二者都会执行符号右边的运算"}),"\n",(0,d.jsxs)(e.li,{children:["不同点：当符号左边是true时，",(0,d.jsx)(e.code,{children:"|"}),"会继续执行符号右边运算，",(0,d.jsx)(e.code,{children:"||"}),"不再执行符号右边的运算"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"开发中推荐使用短路与、短路或"}),"\n",(0,d.jsxs)(e.h2,{id:"27-位运算符",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#27-位运算符",children:"#"}),"2.7 位运算符"]}),"\n","\n",(0,d.jsxs)(e.table,{children:[(0,d.jsx)(e.thead,{children:(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.th,{children:"运算符"}),(0,d.jsx)(e.th,{children:"名称"}),(0,d.jsx)(e.th,{children:"细节"}),(0,d.jsx)(e.th,{children:"备注"})]})}),(0,d.jsxs)(e.tbody,{children:[(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"<<"}),(0,d.jsx)(e.td,{children:"左移运算符"}),(0,d.jsx)(e.td,{children:"空位补0，被移除的最高位丢弃"}),(0,d.jsx)(e.td,{children:"在一定范围内，每向左移1位，相当于 * 2"})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:">>"}),(0,d.jsx)(e.td,{children:"右移运算符"}),(0,d.jsxs)(e.td,{children:["若最高位是0，右移后空位补0；","若最高位是1，右移后空位补1"]}),(0,d.jsx)(e.td,{children:"在一定范围内，每向右移1位，相当于 / 2"})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:">>>"}),(0,d.jsx)(e.td,{children:"无符号右移"}),(0,d.jsx)(e.td,{children:"最高位无论是0或1，空位都补0"}),(0,d.jsx)(e.td,{children:"后边讲"})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"&"}),(0,d.jsx)(e.td,{children:"与"}),(0,d.jsx)(e.td,{children:"每一位只要有0就是0"}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"|"}),(0,d.jsx)(e.td,{children:"或"}),(0,d.jsx)(e.td,{children:"每一位只要有1就是1"}),(0,d.jsx)(e.td,{})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"^"}),(0,d.jsx)(e.td,{children:"异或"}),(0,d.jsx)(e.td,{children:"每一位只要不同就是1"}),(0,d.jsx)(e.td,{children:"公式：k = (k ^n)^n"})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"~"}),(0,d.jsx)(e.td,{children:"取反"}),(0,d.jsx)(e.td,{children:"包括符号位在内，每一位0变1，1变0"}),(0,d.jsx)(e.td,{})]})]})]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"面试题"}),"\n",(0,d.jsx)(e.p,{children:"最高效方式计算2 * 8？"}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["答：",(0,d.jsx)(e.code,{children:"2 << 3"}),"或 ",(0,d.jsx)(e.code,{children:"8 << 1"})]}),"\n",(0,d.jsxs)(e.h2,{id:"28-三元运算符",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#28-三元运算符",children:"#"}),"2.8 三元运算符"]}),"\n",(0,d.jsx)(e.p,{children:"三元运算符的效率比if-else高。"}),"\n",(0,d.jsxs)(e.h2,{id:"29-scanner类",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#29-scanner类",children:"#"}),"2.9 Scanner类"]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"作用"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"获取用户输入的变量"}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"用法"}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"public static void main(String[] args) {\r\n    Scanner scanner = new Scanner(System.in);\r\n    // 获取String类型变量\r\n    String name = scanner.next();\r\n    // 获取int类型变量\r\n    int age = scanner.nextInt();\r\n    // 获取double类型变量\r\n    double weight = scanner.nextDouble();\r\n    // 获取boolean类型变量\r\n    boolean isMarried = scanner.nextBoolean();\r\n    // 获取char类型变量\r\n    String sex = scan.next();\r\n    char sexChar = sex.charAt(0); // 获取索引值为0位置\r\n}\n"})}),"\n",(0,d.jsxs)(e.h2,{id:"210-switch-case",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#210-switch-case",children:"#"}),"2.10 switch-case"]}),"\n","\n",(0,d.jsx)(e.p,{children:"switch中的表达式，只能是一下6种数据类型之一：byte、short、char、int、枚举、String（JDK7之后）"}),"\n",(0,d.jsxs)(e.h2,{id:"211-break和continue",children:[(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#211-break和continue",children:"#"}),"2.11 break和continue"]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"二者区别"}),"\n"]}),"\n","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"break可以用在switch-case语句和循环语句中。continue只能用在循环语句中"}),"\n",(0,d.jsx)(e.li,{children:"break是结束当前循环，continue是结束当次循环"}),"\n"]}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"break和continue结束指定标识的循环"}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-java",meta:"",children:"label:for(int i = 0; i < 10; i++) {\r\n    for(int j = 0; j < 5; j++) {\r\n        ...\r\n        break label;//结束指定标识的这一个循环\r\n        //continue label;//结束指定标识的这一次循环\r\n    }\r\n}\n"})}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"其他"}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["也可以使用","return","关键字结束循环"]})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,d.jsx)(e,Object.assign({},n,{children:(0,d.jsx)(h,n)})):h(n)}let x=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["tang%2Fjava2%2F02_Java%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.md"]={toc:[{id:"21-变量的分类",text:"2.1 变量的分类",depth:2},{id:"22---基本数据类型间的运算规则",text:"2.2   基本数据类型间的运算规则",depth:2},{id:"23-关于进制",text:"2.3 关于进制",depth:2},{id:"24-与--",text:"2.4 ++与--",depth:2},{id:"25-赋值运算符",text:"2.5 赋值运算符",depth:2},{id:"26-逻辑运算符",text:"2.6 逻辑运算符",depth:2},{id:"27-位运算符",text:"2.7 位运算符",depth:2},{id:"28-三元运算符",text:"2.8 三元运算符",depth:2},{id:"29-scanner类",text:"2.9 Scanner类",depth:2},{id:"210-switch-case",text:"2.10 switch-case",depth:2},{id:"211-break和continue",text:"2.11 break和continue",depth:2}],title:"2 Java基本语法",headingTitle:"2 Java基本语法",frontmatter:{}}}}]);