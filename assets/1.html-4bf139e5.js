import{_ as s,p as a,q as e,a1 as n}from"./framework-5866ffd3.js";const c={},t=n(`<h1 id="下载镜像提示没有磁盘空间" tabindex="-1"><a class="header-anchor" href="#下载镜像提示没有磁盘空间" aria-hidden="true">#</a> 下载镜像提示没有磁盘空间</h1><p>1.查看docker根目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># docker info | grep -i &quot;docker root dir&quot;</span>
 Docker Root Dir: /docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.查看目录剩余空间</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># df -hl /docker</span>
文件系统                 容量  已用  可用 已用% 挂载点
/dev/mapper/centos-root  <span class="token number">6</span>.2G  <span class="token number">5</span>.5G  803M   <span class="token number">88</span>% /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>磁盘空间只剩803M可用，可以将他放到一个更大的目录中去。</p><p>3.创建目标目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/systemd/system/docker.service.d/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.创建配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/systemd/system/docker.service.d/devicemapper.conf</span>
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd  <span class="token parameter variable">--graph</span><span class="token operator">=</span>/docker-root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.重启docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),i=[t];function l(o,d){return a(),e("div",null,i)}const p=s(c,[["render",l],["__file","1.html.vue"]]);export{p as default};
