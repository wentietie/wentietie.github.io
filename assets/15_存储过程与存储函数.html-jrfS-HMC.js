import{_ as d,r as c,o as t,c as r,e as n,a,w as i,d as s,b as e}from"./app-CQavEA7Q.js";const p={},o=e(`<h1 id="_15-存储过程与存储函数" tabindex="-1"><a class="header-anchor" href="#_15-存储过程与存储函数"><span>15 存储过程与存储函数</span></a></h1><h2 id="_15-1-概述" tabindex="-1"><a class="header-anchor" href="#_15-1-概述"><span>15.1 概述</span></a></h2><h3 id="_15-1-1-存储过程" tabindex="-1"><a class="header-anchor" href="#_15-1-1-存储过程"><span>15.1.1 存储过程</span></a></h3><blockquote><p>理解</p></blockquote><p>存储过程(Stored Procedure)，就是一组经过<code>预先编译</code>的SQL语句的封装。它是预先存储在MySQL服务器上的，需要执行的时候，客户端只需要向服务器端发出调用存储过程的命令，服务器端就可以把预先存储好的一系列SQL语句全部执行。</p><blockquote><p>优点</p></blockquote><ul><li>简化操作，提高了sql语句的重用性，减少了开发程序员的压力</li><li>减少操作过程中的失误，提高效率</li><li>减少网络传输量（客户端不需要把所有的sql通过网络发送个MySQL服务器）</li><li>减少了SQL语句暴露在网上的风险，也提高了数据查询的安全性</li></ul><blockquote><p>和视图的对比</p></blockquote><ul><li>相同点：存储过程和视图有着同样的优点，<strong>清晰、安全，还可以减少网络传输量</strong>。</li><li>不同点： <ul><li>视图是虚拟表，通常用来对基表的查询操作，不用于增删改操作；</li><li>存储过程可以直接操作底层数据，能够实现一些复杂的数据处理。</li></ul></li></ul><blockquote><p>存储过程的参数</p></blockquote><p>存储过程的参数类型可以：</p><ul><li><code>IN</code>：<strong>默认值</strong>。表示该参数是传入的参数。存储过程知识读取这个参数的值。</li><li><code>OUT</code>：表示该参数是传出的参数。当存储过程执行完毕后，存储过程的客户端或应用程序可以读取该参数的返回值</li><li><code>INOUT</code>：表示该参数既是传入的参数，又是传出的参数。</li></ul><p>以上参数类型都可以在一个存储过程中带0个、1个或者多个。</p><blockquote><p>分类</p></blockquote><p><strong>存储过程可以按照参数类型进行分类：</strong></p><ul><li>没有参数</li><li>仅带IN类型</li><li>仅带OUT类型</li><li>既带IN类型又带OUT类型</li><li>带OUT类型</li></ul><h3 id="_15-1-2-存储函数" tabindex="-1"><a class="header-anchor" href="#_15-1-2-存储函数"><span>15.1.2 存储函数</span></a></h3><p>MySQL支持自定义函数，定义好之后，调用方式与调用MySQL预定义的系统函数一样</p><h3 id="_15-1-3-存储过程-vs-存储函数" tabindex="-1"><a class="header-anchor" href="#_15-1-3-存储过程-vs-存储函数"><span>15.1.3 存储过程 VS 存储函数</span></a></h3><table><thead><tr><th></th><th>关键字</th><th>调用语法</th><th>返回值</th><th>应用场景</th></tr></thead><tbody><tr><td>存储过程</td><td>PROCEDURE</td><td>CALL 存储过程名(参数列表)</td><td>无</td><td>一般用于更新</td></tr><tr><td>存储函数</td><td>FUNCTION</td><td>SELECT 存储函数名(参数列表)</td><td>只有1个</td><td>一般用于查询结果为一个值，并需要返回的场景</td></tr></tbody></table><p>此外：</p><ul><li><strong>存储函数可以在查询语句中使用，存储过程不行</strong>。</li><li>存储过程的功能比存储函数更强大，能执行对表的操作（如创建表、删除表）和事务操作，这些功能存储函数不具备。</li></ul><h2 id="_15-2-创建存储过程" tabindex="-1"><a class="header-anchor" href="#_15-2-创建存储过程"><span>15.2 创建存储过程</span></a></h2><blockquote><p>语法</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">DELIMITER 新的结束标记（存储过程的结束标记）</span>
<span class="line">CREATE PROCEDURE 存储过程名(IN|OUT|INOUT 参数名 参数类型,...)</span>
<span class="line">[characteristics ...]</span>
<span class="line">BEGIN </span>
<span class="line">	# 定义变量</span>
<span class="line">	DECLARE 变量名 变量类型;</span>
<span class="line">	...</span>
<span class="line">	</span>
<span class="line">	# 处理逻辑</span>
<span class="line">	...</span>
<span class="line">END 存储过程的结束标记</span>
<span class="line">DELIMITER ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),u=e(`<ul><li><p><code>DELIMITER</code>：用来设置新的结束标记。MySQL中默认的语句结束符号是&quot;;&quot;。为了避免与存储过程中的SQL语句的结束符冲突，需要使用DELIMITER改变存储过程的结束符。</p><ul><li>第一个DELIMITER：用来表明存储的结束标记。</li><li>第二个DELIMITER：将结束标记改为MySQL默认的存储标记。</li></ul><p><strong>常用的新的结束标记：</strong><code>$</code>、<code>//</code></p></li><li><p><code>characteristics</code>：表示创建存储过程时指定的对存储过程的约束条件。</p><p><strong>characteristics取值信息如下：</strong></p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">LANGUAGE SQL</span>
<span class="line">| [NOT] DETERMINISTIC</span>
<span class="line">| { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }</span>
<span class="line">| SQL SECURITY { DEFINER | INVOKER }</span>
<span class="line">| COMMENT &#39;string&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>LANGUAGE SQL</code>：说明存储过程体是由SQL语句组成的，当前系统支持的语言是SQL。</li><li><code>[NOT] DETERMINISTIC</code>：默认是<code>NOT DETERMINISTIC</code>。指明存储过程执行的结果是否是确定的，即同一输入是否能得到相同的输出。</li><li><code>{ CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }</code>：指明子程序使用SQL语句的限制。 <ul><li><code>CONTAINS SQL</code>：<strong>默认</strong>。表示包含SQL语句，但是并不包含读写数据的SQL语句；</li><li><code>NO SQL</code>：表示不包含任何SQL；</li><li><code>READS SQL DATA</code>：包含读数据的SQL；</li><li><code>MODIFIES SQL DATA</code>：包含写数据的SQL。</li></ul></li><li><code>SQL SECURITY { DEFINER | INVOKER }</code>：指明哪些用户可以执行当前存储过程。 <ul><li><code>DEFINER </code>：表示只有创建者才能执行</li><li><code>INVOKER </code>：表示有当前存储过程访问权限的用户都可以执行</li></ul></li><li><code>COMMENT &#39;string&#39;</code>：string处可以写明该存储过程的一些注释信息</li></ul></li><li><p><code>BEGIN ... END 存储过程体结束符</code>：存储过程的过程体要写在BEGIN ... END 之间。</p><p><strong>存储过程体编写注意事项</strong>：</p><ul><li>存储过程体如果只有一条SQL语句，BEGIN ... END可省。</li><li>存储过程体中的<strong>每个语句都要以&quot;;&quot;作为结束符</strong>。</li><li><code>DECLARE</code>用来声明变量，且<strong>变量的声明必须在其他语句使用之前进行</strong>。</li><li><code>SET 变量名 = 值</code>用来对变量赋值。</li><li><code>SELECT ... INTO 变量名 [FROM ... WHERE ...]</code>也可以对变量进行赋值</li></ul></li></ul><blockquote><p>举例：</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">DELIMITER $</span>
<span class="line">CREATE PROCEDURE test_proc1(IN emp_id INT)</span>
<span class="line">BEGIN </span>
<span class="line">	# 定义变量</span>
<span class="line">	DECLARE emp_year DOUBLE;</span>
<span class="line">	DECLARE emp_sal DOUBLE;</span>
<span class="line">	</span>
<span class="line">	# 赋值</span>
<span class="line">	SELECT DATEDIFF(CURRENT_DATE(), hire_date)/365, salary INTO emp_year, emp_sal</span>
<span class="line">	FROM emps</span>
<span class="line">	WHERE employee_id = emp_id;</span>
<span class="line">	</span>
<span class="line">	# 使用</span>
<span class="line">	SELECT emp_year, emp_sal;</span>
<span class="line"></span>
<span class="line">END $</span>
<span class="line">DELIMITER ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-3-调用存储过程" tabindex="-1"><a class="header-anchor" href="#_15-3-调用存储过程"><span>15.3 调用存储过程</span></a></h2><blockquote><p>语法</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">CALL 存储过程名(参数列表)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>例子</p></blockquote><ul><li><p>参数为<code>IN</code>类型：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">CALL sp1(值);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>调用<code>OUT</code>模式的参数：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 方法一</span>
<span class="line">SET @num = 0; # = 也可替换为 :=</span>
<span class="line">CALL sp1(@num);</span>
<span class="line">SELECT @num;</span>
<span class="line"></span>
<span class="line"># 方法二</span>
<span class="line">CALL sp1(@num);</span>
<span class="line">SELECT @num;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>调用<code>INOUT</code>模式的参数：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SET @num = 0; # = 也可替换为 :=</span>
<span class="line">CALL sp1(@num);</span>
<span class="line">SELECT @num;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_15-4-创建存储函数" tabindex="-1"><a class="header-anchor" href="#_15-4-创建存储函数"><span>15.4 创建存储函数</span></a></h2><blockquote><p>语法</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">DELIMITER 新的结束标记（存储过程的结束标记）</span>
<span class="line">CREATE FUNCTION 函数名(参数名 参数类型,...)</span>
<span class="line">RETURNS 返回值类型</span>
<span class="line">[characteristics ...]</span>
<span class="line">BEGIN</span>
<span class="line">函数体 #函数体中肯定有 RETURN 语句</span>
<span class="line">END 新的结束标记</span>
<span class="line">DELIMITER ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),m=e(`<ul><li>存储函数的参数列表，总是默认为<code>IN</code>类型</li><li><code>RETURNS 返回值类型</code>存储函数必须指明返回值类型，函数体中必须包含一个<code>RETURN 返回值;</code>语句。</li><li><code>characteristic</code>指明对函数的约定，与创建存储过程的约束一致。</li><li><code>BEGIN ... END 新的结束标记</code>：函数体要写在BEGIN ... END之间。如果函数体只有一条语句，BEGIN ... END可省。</li></ul><blockquote><p>举例</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 创建存储函数count_by_id()，参数传入dept_id，该函数查询dept_id部门的员工人数，并返回，数据类型为整型</span>
<span class="line">DELIMITER $</span>
<span class="line">CREATE FUNCTION count_by_id(dept_id INT)</span>
<span class="line">RETURNS INT</span>
<span class="line">	DETERMINISTIC</span>
<span class="line">	READS SQL DATA</span>
<span class="line">BEGIN</span>
<span class="line">	DECLARE emps_num INT DEFAULT 0;</span>
<span class="line">	SELECT COUNT(*) INTO emps_num FROM emps WHERE department_id = dept_id;</span>
<span class="line">	RETURN emps_num;</span>
<span class="line">END $</span>
<span class="line">DELIMITER ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),v=e(`<p>对于创建函数时报错<code>This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)</code>的处理办法：</p><ul><li><p>方式一：</p><p>在创建函数时加上必要的函数约束<code>[NOT] DETERMINISTIC</code>和<code>{CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA}</code></p></li><li><p>方式二：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 修改全局参数</span>
<span class="line">SET GLOBAL log_bin_trust_function_creators = 1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_15-5-调用存储函数" tabindex="-1"><a class="header-anchor" href="#_15-5-调用存储函数"><span>15.5 调用存储函数</span></a></h2><blockquote><p>语法</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SELECT 函数名(参数列表);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_15-6-查看存储过程和存储函数" tabindex="-1"><a class="header-anchor" href="#_15-6-查看存储过程和存储函数"><span>15.6 查看存储过程和存储函数</span></a></h2><ul><li><p>使用<code>SHOW CREATE</code>语句查看存储过程和函数的创建信息</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SHOW CREATE {PROCEDURE | FUNCTION} 存储过程名或函数名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>使用<code>SHOW STATUS</code>语句查看存储过程和函数的状态信息</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SHOW {PROCEDURE | FUNCTION} STATUS [LIKE &#39;模糊查询条件&#39;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>从<code>information_schema.Routines</code>表中查看存储过程和函数的信息</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SELECT * </span>
<span class="line">FROM information_schema.Routines</span>
<span class="line">WHERE ROUTINE_NAME=&#39;存储过程或函数的名&#39; [AND ROUTINE_TYPE = {&#39;PROCEDURE|FUNCTION&#39;}];</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_15-7-修改存储过程和存储函数" tabindex="-1"><a class="header-anchor" href="#_15-7-修改存储过程和存储函数"><span>15.7 修改存储过程和存储函数</span></a></h2><p>修改存储过程和存储函数，<strong>不能修改其存储过程体或者函数体，只能修改相关特性</strong>。语法如下：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">ALTER {PROCEDURE | FUNCTION} 存储过程或函数的名 [characteristic ...]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,10),h=e(`<div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">{ CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }</span>
<span class="line">| SQL SECURITY { DEFINER | INVOKER }</span>
<span class="line">| COMMENT &#39;string&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-8-删除存储过程和存储函数" tabindex="-1"><a class="header-anchor" href="#_15-8-删除存储过程和存储函数"><span>15.8 删除存储过程和存储函数</span></a></h2><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">DROP {PROCEDURE | FUNCTION} [IF EXISTS] 存储过程或函数的名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_15-9-存储过程的优缺点" tabindex="-1"><a class="header-anchor" href="#_15-9-存储过程的优缺点"><span>15.9 存储过程的优缺点</span></a></h2><p>尽管存储过程有诸多优点，但是对于存储过程的使用，**一直都存在着很多争议，**比如有些公司对于大型 项目要求使用存储过程，而有些公司在手册中明确禁止使用存储过程。</p><h3 id="_15-9-1-存储过程的优点" tabindex="-1"><a class="header-anchor" href="#_15-9-1-存储过程的优点"><span>15.9.1 存储过程的优点</span></a></h3><ul><li><strong>一次编译多次使用，提高了SQL的执行效率</strong>：存储过程只在创建时进行编译，之后的使用都不需要重新编译</li><li><strong>减少开发工作量，保证代码结构清晰</strong>：将代码封装成<code>模块</code>，模块间可以<code>重复使用</code></li><li><strong>存储过程的安全性强</strong>：在创建存储过程时<code>设置用户的使用权限</code>，这样就和视图一样具有较强的安全性</li><li><strong>减少网络传输量</strong>：存储过程是保存在MySQL服务器端的，每次只需要调用存储过程即可，减少了SQL语句的网络传输</li><li><strong>良好的封装性</strong>：在进行相对复杂的数据库操作时，原本需要使用一条一条的SQL语句，可能需要多次连接数据库。如果使用存储过程，只需要连接一次</li></ul><h3 id="_15-9-2-存储过程的缺点" tabindex="-1"><a class="header-anchor" href="#_15-9-2-存储过程的缺点"><span>15.9.2 存储过程的缺点</span></a></h3>`,8),b=e("<ul><li><strong>可移植性差</strong>：存储过程不能跨数据库移植。如在 MySQL、Oracle 和 SQL Server 里编写的存储过 程，在换成其他数据库时都需要重新编写。</li><li><strong>调试困难</strong>：对于复杂的存储过程，开发和维护都不容易，没有好用、免费的调试工具</li><li><strong>存储过程的版本管理很困难</strong>：比如数据表索引发生变化了，可能会导致存储过程失效。我们在开发 软件的时候往往需要进行版本管理，但是存储过程本身没有版本控制，版本迭代更新的时候很麻烦</li><li><strong>不适合高并发场景</strong>：高并发的场景需要减少数据库的压力，有时数据库会采用<code>分库分表</code>的方 式，而且对可扩展性要求很高，在这种情况下，存储过程会变得难以维护， 增加数据库的压力 ，显然就 不适用了</li></ul>",1);function E(g,_){const l=c("front");return t(),r("div",null,[o,n("p",null,[a(l,{style:{background:"yellow"}},{default:i(()=>[s("说明：")]),_:1})]),u,n("p",null,[a(l,{style:{background:"yellow"}},{default:i(()=>[s("说明：")]),_:1})]),m,n("p",null,[a(l,{style:{background:"yellow"}},{default:i(()=>[s("说明：")]),_:1})]),v,n("p",null,[a(l,{style:{background:"yellow"}},{default:i(()=>[s("说明：")]),_:1}),s("characteristic指定存储过程或函数的特性，其取值信息与创建存储过程、函数时的取值信息略有 不同，其取值如下：")]),h,n("p",null,[a(l,{style:{background:"yellow"}},{default:i(()=>[s("《阿里开发规范》：【强制】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。")]),_:1})]),b])}const y=d(p,[["render",E],["__file","15_存储过程与存储函数.html.vue"]]),S=JSON.parse('{"path":"/static/tang/mysql/15_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0.html","title":"15 存储过程与存储函数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"15.1 概述","slug":"_15-1-概述","link":"#_15-1-概述","children":[{"level":3,"title":"15.1.1 存储过程","slug":"_15-1-1-存储过程","link":"#_15-1-1-存储过程","children":[]},{"level":3,"title":"15.1.2 存储函数","slug":"_15-1-2-存储函数","link":"#_15-1-2-存储函数","children":[]},{"level":3,"title":"15.1.3 存储过程 VS 存储函数","slug":"_15-1-3-存储过程-vs-存储函数","link":"#_15-1-3-存储过程-vs-存储函数","children":[]}]},{"level":2,"title":"15.2 创建存储过程","slug":"_15-2-创建存储过程","link":"#_15-2-创建存储过程","children":[]},{"level":2,"title":"15.3 调用存储过程","slug":"_15-3-调用存储过程","link":"#_15-3-调用存储过程","children":[]},{"level":2,"title":"15.4 创建存储函数","slug":"_15-4-创建存储函数","link":"#_15-4-创建存储函数","children":[]},{"level":2,"title":"15.5 调用存储函数","slug":"_15-5-调用存储函数","link":"#_15-5-调用存储函数","children":[]},{"level":2,"title":"15.6 查看存储过程和存储函数","slug":"_15-6-查看存储过程和存储函数","link":"#_15-6-查看存储过程和存储函数","children":[]},{"level":2,"title":"15.7 修改存储过程和存储函数","slug":"_15-7-修改存储过程和存储函数","link":"#_15-7-修改存储过程和存储函数","children":[]},{"level":2,"title":"15.8 删除存储过程和存储函数","slug":"_15-8-删除存储过程和存储函数","link":"#_15-8-删除存储过程和存储函数","children":[]},{"level":2,"title":"15.9 存储过程的优缺点","slug":"_15-9-存储过程的优缺点","link":"#_15-9-存储过程的优缺点","children":[{"level":3,"title":"15.9.1 存储过程的优点","slug":"_15-9-1-存储过程的优点","link":"#_15-9-1-存储过程的优点","children":[]},{"level":3,"title":"15.9.2 存储过程的缺点","slug":"_15-9-2-存储过程的缺点","link":"#_15-9-2-存储过程的缺点","children":[]}]}],"git":{"updatedTime":1720499771000,"contributors":[{"name":"文铁铁~","email":"1179131421@qq.com","commits":1}]},"filePathRelative":"static/tang/mysql/15_存储过程与存储函数.md"}');export{y as comp,S as data};
