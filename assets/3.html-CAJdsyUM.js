import{_ as e,o as s,c as a,b as n}from"./app-CW2dCZSC.js";const t="/assets/k8s-push-image-refused-BUP-Hi-g.png",i="/assets/k8s-push-image-refused-2-BCkGmemy.png",l={},r=n('<h1 id="无法推送镜像" tabindex="-1"><a class="header-anchor" href="#无法推送镜像"><span>无法推送镜像</span></a></h1><p>https://blog.csdn.net/haodiaoer/article/details/94835649</p><h1 id="错误信息" tabindex="-1"><a class="header-anchor" href="#错误信息"><span>错误信息：</span></a></h1><p><strong>Get https://10.1.93.164:5000/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</strong></p><p><img src="'+t+`" alt=""></p><h1 id="错误原因" tabindex="-1"><a class="header-anchor" href="#错误原因"><span>错误原因：</span></a></h1><p>docker私有仓库服务器，<strong>默认是基于https传输的</strong>，所以我们需要在客户端做相关设置，不使用https传输</p><h1 id="解决步骤" tabindex="-1"><a class="header-anchor" href="#解决步骤"><span>解决步骤：</span></a></h1><h2 id="step1-编辑-etc-docker-daemon-json文件" tabindex="-1"><a class="header-anchor" href="#step1-编辑-etc-docker-daemon-json文件"><span>step1.编辑/etc/docker/daemon.json文件</span></a></h2><div class="language-linux line-numbers-mode" data-highlighter="prismjs" data-ext="linux" data-title="linux"><pre class="language-linux"><code><span class="line">vi /etc/docker/daemon.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="step2-将下面的代码放进去保存并退出" tabindex="-1"><a class="header-anchor" href="#step2-将下面的代码放进去保存并退出"><span>step2.将下面的代码放进去保存并退出</span></a></h2><div class="language-linux line-numbers-mode" data-highlighter="prismjs" data-ext="linux" data-title="linux"><pre class="language-linux"><code><span class="line">&quot;insecure-registries&quot;:[&quot;镜像服务器IP:镜像容器端口号&quot;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果如下：</p><p><img src="`+i+`" alt=""></p><h2 id="step3-重新启动docker" tabindex="-1"><a class="header-anchor" href="#step3-重新启动docker"><span>step3.重新启动docker</span></a></h2><div class="language-linux line-numbers-mode" data-highlighter="prismjs" data-ext="linux" data-title="linux"><pre class="language-linux"><code><span class="line">systemctl daemon-reload</span>
<span class="line">systemctl restart docker</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),d=[r];function c(o,p){return s(),a("div",null,d)}const u=e(l,[["render",c],["__file","3.html.vue"]]),m=JSON.parse('{"path":"/static/tang/k8s/%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6/3.html","title":"无法推送镜像","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"step1.编辑/etc/docker/daemon.json文件","slug":"step1-编辑-etc-docker-daemon-json文件","link":"#step1-编辑-etc-docker-daemon-json文件","children":[]},{"level":2,"title":"step2.将下面的代码放进去保存并退出","slug":"step2-将下面的代码放进去保存并退出","link":"#step2-将下面的代码放进去保存并退出","children":[]},{"level":2,"title":"step3.重新启动docker","slug":"step3-重新启动docker","link":"#step3-重新启动docker","children":[]}],"git":{"updatedTime":1720499771000,"contributors":[{"name":"文铁铁~","email":"1179131421@qq.com","commits":1}]},"filePathRelative":"static/tang/k8s/错误集锦/3.md"}');export{u as comp,m as data};
