import{_ as d,r as t,o as r,c,e,a as l,w as a,d as s,b as i}from"./app-CQavEA7Q.js";const p={},m=i(`<h1 id="_9-子查询" tabindex="-1"><a class="header-anchor" href="#_9-子查询"><span>9 子查询</span></a></h1><h2 id="_9-1-概述" tabindex="-1"><a class="header-anchor" href="#_9-1-概述"><span>9.1 概述</span></a></h2><h3 id="_9-1-1-定义与语法" tabindex="-1"><a class="header-anchor" href="#_9-1-1-定义与语法"><span>9.1.1 定义与语法</span></a></h3><blockquote><p>定义</p></blockquote><p>子查询是指一个查询语句嵌套在另外一个查询语句内部</p><blockquote><p>语法</p></blockquote><p>子查询可以在<code>SELECT</code>、<code>WHERE</code>、<code>HAVING</code>、<code>CASE</code> 语句中使用。基本语法如下</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">SELECT ..., ..., ...</span>
<span class="line">FROM ...</span>
<span class="line">WHERE 表达式左侧内容 操作符 (子查询)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=e("ul",null,[e("li",null,"子查询的结果被主查询使用")],-1),u=e("ul",null,[e("li",null,"子查询要包含在一对小括号内"),e("li",null,"将子查询放在比较条件的右侧 ===> 美观"),e("li",null,"单行操作符对应单行子查询，多行操作符对应多行子查询，此外，多行子查询中也可以单行操作符和多行操作符一起使用。")],-1),h=e("h3",{id:"_9-1-2-子查询分类",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_9-1-2-子查询分类"},[e("span",null,"9.1.2 子查询分类")])],-1),v=e("ul",null,[e("li",null,[e("strong",null,"单行子查询"),s("：子查询的返回结果是一条记录")]),e("li",null,[e("strong",null,"多行子查询"),s("：子查询的返回结果是多条记录")])],-1),_=i(`<ul><li><strong>相关子查询</strong>：子查询的执行依赖外部情况，通常是指<strong>子查询使用了外部的表，并进行了条件关联</strong>。每执行一次外部查询，子查询都要重新计算一次。</li><li><strong>不相关子查询</strong></li></ul><h2 id="_9-2-单行子查询" tabindex="-1"><a class="header-anchor" href="#_9-2-单行子查询"><span>9.2 单行子查询</span></a></h2><h3 id="_9-2-1-单行比较操作符" tabindex="-1"><a class="header-anchor" href="#_9-2-1-单行比较操作符"><span>9.2.1 单行比较操作符</span></a></h3><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&lt;&gt;</td><td>不等于</td></tr></tbody></table><h3 id="_9-2-2-示例" tabindex="-1"><a class="header-anchor" href="#_9-2-2-示例"><span>9.2.2 示例</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 查询工资比公司平均工资高的员工的员工号，姓名和工资。</span>
<span class="line">SELECT employee_id, last_name, salary</span>
<span class="line">FROM employees</span>
<span class="line">WHERE salary &gt; (</span>
<span class="line">                    SELECT AVG(salary)</span>
<span class="line">                    FROM employees</span>
<span class="line">                )</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-2-3-其他说明" tabindex="-1"><a class="header-anchor" href="#_9-2-3-其他说明"><span>9.2.3 其他说明</span></a></h3><ul><li>如果子查询的结果为空，主查询也不会报错</li><li>当子查询返回多行记录时，如果只使用单行比较操作符，会报错</li></ul><h2 id="_9-2-多行子查询" tabindex="-1"><a class="header-anchor" href="#_9-2-多行子查询"><span>9.2 多行子查询</span></a></h2><h3 id="_9-2-1-多行比较操作符" tabindex="-1"><a class="header-anchor" href="#_9-2-1-多行比较操作符"><span>9.2.1 多行比较操作符</span></a></h3><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>IN</td><td>等于列表中的<strong>任意一个</strong></td></tr><tr><td>ANY</td><td><u>需要和单行比较操作符一起使用</u>，和子查询返回的<strong>某一个值</strong>比较</td></tr><tr><td>ALL</td><td><u>需要和单行比较操作符一起使用</u>，和子查询返回的<strong>所有值</strong>比较</td></tr><tr><td>SOME</td><td>实际上是ANY的别名，作用相同，一般常使用ANY</td></tr></tbody></table><h3 id="_9-2-2-示例-1" tabindex="-1"><a class="header-anchor" href="#_9-2-2-示例-1"><span>9.2.2 示例</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 选择工资大于所有JOB_ID = &#39;SA_MAN&#39;的员工的工资的员工的last_name, job_id, salary</span>
<span class="line">SELECT last_name, job_id, salary</span>
<span class="line">FROM employees</span>
<span class="line">WHERE salary &gt; ALL (</span>
<span class="line">                        SELECT salary</span>
<span class="line">                        FROM employees</span>
<span class="line">                        WHERE job_id = &#39;SA_MAN&#39;</span>
<span class="line">                    )</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-2-3-其他说明-1" tabindex="-1"><a class="header-anchor" href="#_9-2-3-其他说明-1"><span>9.2.3 其他说明</span></a></h3><p>无</p><h2 id="_9-3-相关子查询" tabindex="-1"><a class="header-anchor" href="#_9-3-相关子查询"><span>9.3 相关子查询</span></a></h2><h3 id="_9-3-1-概述" tabindex="-1"><a class="header-anchor" href="#_9-3-1-概述"><span>9.3.1 概述</span></a></h3><blockquote><p>相关子查询与不相关子查询</p></blockquote><p>相关子查询和不相关子查询的区别是，<strong>相关子查询中的子查询使用了外部的表，并进行了条件关联</strong>。</p><p>比如：查询员工工资高于<strong>部门平均工资</strong>的员工信息，是相关子查询；查询员工工资高于<strong>公司平均工资</strong>的员工信息，是不相关查询。</p><h3 id="_9-3-2-示例" tabindex="-1"><a class="header-anchor" href="#_9-3-2-示例"><span>9.3.2 示例</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 查询员工中工资大于本部门平均工资的员工的last_name,salary和其department_id</span>
<span class="line">SELECT last_name, salary, department_id</span>
<span class="line">FROM employees o</span>
<span class="line">WHERE department_id IS NOT NULL</span>
<span class="line">AND salary &gt; (</span>
<span class="line">                SELECT AVG(salary)</span>
<span class="line">                FROM employees i</span>
<span class="line">                WHERE i.department_id = o.department_id</span>
<span class="line">            ) </span>
<span class="line">							</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-3-3-exists-与-not-exists关键字" tabindex="-1"><a class="header-anchor" href="#_9-3-3-exists-与-not-exists关键字"><span>9.3.3 EXISTS 与 NOT EXISTS关键字</span></a></h3><blockquote><p>概述</p></blockquote><p>相关子查询通常会和<strong>EXISTS</strong>操作符一起来使用，用来检查在子查询中是否存在满足条件的行：</p><ul><li><strong>如果当前查询不满足条件</strong>，此时返回false，并继续在子查询中查找；</li><li><strong>如果找到了满足条件的行</strong>，此时返回true，结束查找</li></ul>`,26),b=i(`<blockquote><p>示例</p></blockquote><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 查询departments表中，不存在于employees表中的部门的department_id和department_name</span>
<span class="line">SELECT d.department_id, d.department_name</span>
<span class="line">FROM departments d</span>
<span class="line">WHERE NOT EXISTS (</span>
<span class="line">                    SELECT e.department_id </span>
<span class="line">                    FROM employees e</span>
<span class="line">                    WHERE e.department_id = d.department_id</span>
<span class="line">                ) </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上<strong>子查询</strong>的<code>SELECT e.department_id</code>，也可以写成<code>SELECT *</code> 、 <code>SELECT &#39;x&#39;</code>等。<strong>只要满足子查询条件就会返回true，不会返回SELECT中的列</strong>。</p><h2 id="_9-4-相关更新" tabindex="-1"><a class="header-anchor" href="#_9-4-相关更新"><span>9.4 相关更新</span></a></h2><h3 id="_9-4-1-基本语法" tabindex="-1"><a class="header-anchor" href="#_9-4-1-基本语法"><span>9.4.1 基本语法</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">UPDATE 数据库表1 表别名1</span>
<span class="line">SET column = (SELECT 字段名</span>
<span class="line">FROM 数据库表2 表别名2</span>
<span class="line">WHERE 表别名1.列名 = 表别名2.列名);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-4-2-示例" tabindex="-1"><a class="header-anchor" href="#_9-4-2-示例"><span>9.4.2 示例</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 在employees中增加一个department_name字段，数据为员工对应的部门名称</span>
<span class="line"># 1）</span>
<span class="line">ALTER TABLE employees ADD(department_name VARCHAR2(14));</span>
<span class="line"># 2）</span>
<span class="line">UPDATE employees e</span>
<span class="line">SET department_name = (</span>
<span class="line">    SELECT department_name</span>
<span class="line">	FROM departments d</span>
<span class="line">	WHERE e.department_id = d.department_id</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-5-相关删除" tabindex="-1"><a class="header-anchor" href="#_9-5-相关删除"><span>9.5 相关删除</span></a></h2><h3 id="_9-5-1-基本语法" tabindex="-1"><a class="header-anchor" href="#_9-5-1-基本语法"><span>9.5.1 基本语法</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line">DELETE FROM 数据库表1 表别名1</span>
<span class="line">WHERE 列名 操作符 (</span>
<span class="line">    SELECT expression</span>
<span class="line">	FROM 数据库表2 表别名2</span>
<span class="line">	WHERE 表别名1.列名 = 表别名2.列名</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-5-2-示例" tabindex="-1"><a class="header-anchor" href="#_9-5-2-示例"><span>9.5.2 示例</span></a></h3><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre class="language-mysql"><code><span class="line"># 删除表employees中，其与emp_history表皆有的数据</span>
<span class="line">DELETE FROM employees e</span>
<span class="line">WHERE employee_id in (</span>
<span class="line">    SELECT employee_id</span>
<span class="line">	FROM emp_history</span>
<span class="line">	WHERE employee_id = e.employee_id</span>
<span class="line">);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function g(E,y){const n=t("front");return r(),c("div",null,[m,e("p",null,[l(n,{style:{background:"yellow"}},{default:a(()=>[s("说明如下：")]),_:1})]),o,e("p",null,[l(n,{style:{background:"yellow"}},{default:a(()=>[s("注意事项：")]),_:1})]),u,h,e("blockquote",null,[e("p",null,[s("分类方式1："),l(n,{style:{background:"yellow"}},{default:a(()=>[s("按照子查询的返回结果是一条和多条记录分")]),_:1})])]),v,e("blockquote",null,[e("p",null,[s("分类方式2："),l(n,{style:{background:"yellow"}},{default:a(()=>[s("按照子查询的执行是否依赖主查询分")]),_:1})])]),_,e("p",null,[l(n,{style:{background:"yellow"}},{default:a(()=>[s("注意：")]),_:1}),s("EXISTS操作符后的子查询中SELECT语句中的列，不会返回，只会返回true或者false。具体说明见示例代码。")]),b])}const x=d(p,[["render",g],["__file","09_子查询.html.vue"]]),S=JSON.parse('{"path":"/static/tang/mysql/09_%E5%AD%90%E6%9F%A5%E8%AF%A2.html","title":"9 子查询","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"9.1 概述","slug":"_9-1-概述","link":"#_9-1-概述","children":[{"level":3,"title":"9.1.1 定义与语法","slug":"_9-1-1-定义与语法","link":"#_9-1-1-定义与语法","children":[]},{"level":3,"title":"9.1.2 子查询分类","slug":"_9-1-2-子查询分类","link":"#_9-1-2-子查询分类","children":[]}]},{"level":2,"title":"9.2 单行子查询","slug":"_9-2-单行子查询","link":"#_9-2-单行子查询","children":[{"level":3,"title":"9.2.1 单行比较操作符","slug":"_9-2-1-单行比较操作符","link":"#_9-2-1-单行比较操作符","children":[]},{"level":3,"title":"9.2.2 示例","slug":"_9-2-2-示例","link":"#_9-2-2-示例","children":[]},{"level":3,"title":"9.2.3 其他说明","slug":"_9-2-3-其他说明","link":"#_9-2-3-其他说明","children":[]}]},{"level":2,"title":"9.2 多行子查询","slug":"_9-2-多行子查询","link":"#_9-2-多行子查询","children":[{"level":3,"title":"9.2.1 多行比较操作符","slug":"_9-2-1-多行比较操作符","link":"#_9-2-1-多行比较操作符","children":[]},{"level":3,"title":"9.2.2 示例","slug":"_9-2-2-示例-1","link":"#_9-2-2-示例-1","children":[]},{"level":3,"title":"9.2.3 其他说明","slug":"_9-2-3-其他说明-1","link":"#_9-2-3-其他说明-1","children":[]}]},{"level":2,"title":"9.3 相关子查询","slug":"_9-3-相关子查询","link":"#_9-3-相关子查询","children":[{"level":3,"title":"9.3.1 概述","slug":"_9-3-1-概述","link":"#_9-3-1-概述","children":[]},{"level":3,"title":"9.3.2 示例","slug":"_9-3-2-示例","link":"#_9-3-2-示例","children":[]},{"level":3,"title":"9.3.3 EXISTS 与 NOT EXISTS关键字","slug":"_9-3-3-exists-与-not-exists关键字","link":"#_9-3-3-exists-与-not-exists关键字","children":[]}]},{"level":2,"title":"9.4 相关更新","slug":"_9-4-相关更新","link":"#_9-4-相关更新","children":[{"level":3,"title":"9.4.1 基本语法","slug":"_9-4-1-基本语法","link":"#_9-4-1-基本语法","children":[]},{"level":3,"title":"9.4.2 示例","slug":"_9-4-2-示例","link":"#_9-4-2-示例","children":[]}]},{"level":2,"title":"9.5 相关删除","slug":"_9-5-相关删除","link":"#_9-5-相关删除","children":[{"level":3,"title":"9.5.1 基本语法","slug":"_9-5-1-基本语法","link":"#_9-5-1-基本语法","children":[]},{"level":3,"title":"9.5.2 示例","slug":"_9-5-2-示例","link":"#_9-5-2-示例","children":[]}]}],"git":{"updatedTime":1720499771000,"contributors":[{"name":"文铁铁~","email":"1179131421@qq.com","commits":1}]},"filePathRelative":"static/tang/mysql/09_子查询.md"}');export{x as comp,S as data};
