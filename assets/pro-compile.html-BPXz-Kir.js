import{_ as e,o as l,c as i,b as a}from"./app-CQavEA7Q.js";const t={},n=a('<h1 id="js-预编译" tabindex="-1"><a class="header-anchor" href="#js-预编译"><span>JS 预编译</span></a></h1><p>预编译分为全局预编译和局部预编译，全局预编译发生在页面加载完成时执行，而局部预编译发生在函数执行的前一刻。</p><h2 id="js运行三步曲" tabindex="-1"><a class="header-anchor" href="#js运行三步曲"><span>js运行三步曲</span></a></h2><ol><li>语法分析</li><li>预编译</li><li>解释执行</li></ol><h2 id="全局预编译过程" tabindex="-1"><a class="header-anchor" href="#全局预编译过程"><span>全局预编译过程</span></a></h2><ol><li>创建一个GO对象 --&gt; Global Object</li><li>找变量声明作为GO的属性名，并赋值为undefined；（若名称相同则写一个并赋值undefined）；</li><li>找函数声明，赋值为函数体（若函数名与上面某个变量相等时，则用函数体覆盖）；</li></ol><h2 id="函数预编译过程" tabindex="-1"><a class="header-anchor" href="#函数预编译过程"><span>函数预编译过程</span></a></h2><ol><li>创建一个AO对象 --&gt; AO:执行期上下文 Activation Object</li><li>找形参和变量声明，将变量名和形参名作为AO的属性名，并赋值为undefined；（若名称相同则写一个并赋值undefined）；</li><li>将形参和实参统一（将实参值赋给AO中与形参相同的属性）；</li><li>找函数声明，赋值为函数体（若函数名与上面某个变量相等时，则用函数体覆盖）；</li></ol>',8),s=[n];function o(c,r){return l(),i("div",null,s)}const h=e(t,[["render",o],["__file","pro-compile.html.vue"]]),p=JSON.parse('{"path":"/static/notes/JS/pro-compile.html","title":"JS 预编译","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"js运行三步曲","slug":"js运行三步曲","link":"#js运行三步曲","children":[]},{"level":2,"title":"全局预编译过程","slug":"全局预编译过程","link":"#全局预编译过程","children":[]},{"level":2,"title":"函数预编译过程","slug":"函数预编译过程","link":"#函数预编译过程","children":[]}],"git":{"updatedTime":1720499771000,"contributors":[{"name":"文铁铁~","email":"1179131421@qq.com","commits":1}]},"filePathRelative":"static/notes/JS/pro-compile.md"}');export{h as comp,p as data};
